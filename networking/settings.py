"""
Django settings for networking project.

Generated by 'django-admin startproject' using Django 3.2.13.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
import os



os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'NETWORKING-B2B.settings')
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-!ii!0m(3f+mbowdwey!6d)ht3a@xxe=8s0%8n8a&%pf9%&puhb'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
    ### Allauth 
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.linkedin',
    'allauth.socialaccount.providers.microsoft',
    'allauth.socialaccount.providers.facebook',
    ### third party libraries
    
    'request',
    'rest_framework',
    'widget_tweaks',
    'chartjs',
    'crispy_forms',
    'django_filters',
    'bootstrap5',
    'django_cascading_dropdown_widget',
    'django_tables2',
    'dynamic_forms',
    'django_htmx',
    'phonenumber_field',
    'django.contrib.humanize',
    'django_otp',
    'django_otp.plugins.otp_totp',
    #'djstripe',
    
    
    ### System apps
    'core',
    'accounts',
    #'employees',
    'profiles',
    'contacts',
    'industries',
    'fiches',
    'jobs',
    'testimonies',
    'applications',
    'blogs',
    'deals',
    'product_deals',
    'rfi',
    'projects',
    'enterprises',
    'ckeditor',
    'tinymce',
    'trainings',
    'trainingapplications',
    'analytics.apps',
    'discussions',
    'products',
    
    
]

INSTALLED_APPS += ('django_summernote', ) 

CRISPY_ALLOWED_TEMPLATES_PACKS = "bootstraps5"

CRISPY_TEMPLATES_PACK = 'bootstrap5'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'request.middleware.RequestMiddleware',
    'django_otp.middleware.OTPMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
]

'''
REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',
        ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
    'rest_framework_simplejwt.authentication.JWTAuthentication',]
       
    
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=30), #lifetime of the access token
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1), # time lapse for refresh token
    'AUTH_HEADER_TYPES': ('Bearer', 'Token'),
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',)
}
'''
ROOT_URLCONF = 'networking.urls'
#CSRF_TRUSTED_ORIGINS = ["127.0.0.1:8000"]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        #'DIRS': [],
        'DIRS': [os.path.join(BASE_DIR, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'networking.wsgi.application'
AUTH_USER_MODEL = 'core.CustomUser'
ID_DIGITS_LENGTH = 12

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        #'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

'''
AUTHENTICATION_BACKENDS  = (
    'django.contrib.auth.backends.ModelBackend',
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',
    
   # `allauth` specific authentication methods, such as login by email
    'allauth.account.auth_backends.AuthenticationBackend',
)
'''
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True

#AUTH
LOGIN_REDIRECT_URL = "accounts:home-page"
LOGOUT_REDIRECT_URL = "accounts:login"
REQUEST_BASE_URL = ""

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]
STATIC_ROOT = os.path.join(BASE_DIR, "static_root")
MEDIA_URL = '/media/'
MEDIA_ROOT=os.path.join(BASE_DIR, "media")

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

EMAIL_BACKEND ='django.core.mail.backends.smtp.EmailBackend'

EMAIL_BACKEND = "django.core.mail.backends.filebased.EmailBackend"
EMAIL_FILE_PATH = [os.path.join(BASE_DIR, "sent_emails")]
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = 'babala.assih@gmail.com' # this email will be used to send emails
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_PASS') # host email password required
# now sign in with your host gmail account in your browser
# open following link and turn it ON
# https://myaccount.google.com/lesssecureapps
# otherwise you will get SMTPAuthenticationError at /contactus
# this process is required because google blocks apps authentication by default
EMAIL_RECEIVING_USER = ['to@gmail.com'] # email on which you will receive messages sent from website

SITE_ID = 1

ACCOUNT_AUTHENTICATION_METHOD =('username' , 'email' , 'username_email')
ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS =3
ACCOUNT_USERNAME_REQUIRED = True
ACCOUNT_EMAIL_REQUIRED = False
#for production change optional to mandatory
ACCOUNT_EMAIL_VERIFICATION = ('optional')
#ACCOUNT_EMAIL_VERIFICATION = ('mandatory')

#Stripe 
#STRIPE_PUBLIC_KEY = env("STRIPE_PUBLIC_KEY")
#STRIPE_SECRET_KEY = env("STRIPE_SECRET_KEY")
#STRIPE_WEBHOOK_SECRET_KEY =
STRIPE_PUBLIC_KEY = "pk_test_51MkX0vFnCvJSP7I78lJKqbRoMqngNtMld8FYQ4jwp8KAgFGtjKKdOYqhqb2fDjlvWptSb3ifI84BcLkk7V4v6ECc002wgUaHzr"
STRIPE_SECRET_KEY = "pk_test_51MkX0vFnCvJSP7I78lJKqbRoMqngNtMld8FYQ4jwp8KAgFGtjKKdOYqhqb2fDjlvWptSb3ifI84BcLkk7V4v6ECc002wgUaHzr"


##WYSIWYG###
#X_FRAME_OPTIONS = 'SAMEORIGIN'
CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'full',
        'height': 300,
        'width': '100%',
    },
}

'''
MESSAGE_TAGS = {
        messages.DEBUG: 'alert-secondary',
        messages.INFO: 'alert-info',
        messages.SUCCESS: 'alert-success',
        messages.WARNING: 'alert-warning',
        messages.ERROR: 'alert-danger',
 }
 '''

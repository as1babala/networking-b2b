# Generated by Django 3.2.13 on 2023-12-24 00:47

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('company_name', models.CharField(default='', max_length=100)),
                ('salutations', models.CharField(choices=[('MISS', 'MISS'), ('Mrs', 'Mrs'), ('Ms', 'Ms'), ('Mr', 'Mr')], default='', max_length=10)),
                ('is_admin', models.BooleanField(default=False, verbose_name='Is Admin')),
                ('is_expert', models.BooleanField(default=False, verbose_name='Would like to register as an expertise')),
                ('is_employee', models.BooleanField(default=False, verbose_name='Is Employee')),
                ('commercial', models.BooleanField(default=False, verbose_name='Would like to be a commercial partner')),
                ('technical', models.BooleanField(default=False, verbose_name='Would like to be a technical partner')),
                ('financial', models.BooleanField(default=False, verbose_name='Would like to be a financial partner')),
                ('management', models.BooleanField(default=False, verbose_name='Would like to be a management partner')),
                ('is_reviewer', models.BooleanField(default=False, verbose_name='Is reviewer')),
                ('is_approver', models.BooleanField(default=False, verbose_name='Is approver')),
                ('agreement', models.BooleanField(default=False, verbose_name='By clicking I accept to become member and share my information with your organization')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ('id',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField(max_length=5000)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('blog_image', models.ImageField(default='blog_pics/blog 1.pnp', upload_to='blog_pics/')),
                ('status', models.CharField(choices=[('DRAFT', 'DRAFT'), ('PUBLISHED', 'PUBLISHED'), ('ARCHIVED', 'ARCHIVED')], default='DRAFT', max_length=15)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Blog',
                'verbose_name_plural': 'Blogs',
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=50)),
                ('phone_ind', models.CharField(max_length=3)),
                ('phone_number', models.CharField(max_length=10)),
                ('message', models.CharField(max_length=500)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Contacts',
                'verbose_name_plural': 'Contacts',
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='Deals',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('slug', models.SlugField(max_length=200)),
                ('service_category', models.CharField(choices=[('Healthcare Services', 'Healthcare Services'), ('Educational Services:', 'Educational Services:'), ('Professional Consulting', 'Professional Consulting'), ('Financial Services', 'Financial Services'), ('Information Technology (IT) Services', 'Information Technology (IT) Services'), ('Real Estate Services', 'Real Estate Services'), ('Hospitality Services', 'Hospitality Services'), ('Transportation Services', 'Transportation Services'), ('Entertainment Services', 'Entertainment Services'), ('Marketing & Advertising Services:', 'Marketing & Advertising Services:'), ('Home Maintenance and Repair', 'Home Maintenance and Repair'), ('Beauty & Personal Care Services', 'Beauty & Personal Care Services'), ('Legal Services', 'Legal Services'), ('Creative Services', 'Creative Services'), ('Retail & E-commerce Services', 'Retail & E-commerce Services'), ('Environmental Services', 'Environmental Services'), ('Agricultural Services', 'Agricultural Services'), ('Human Resources (HR) & Recruitment', 'Human Resources (HR) & Recruitment'), ('Construction & Architecture', 'Construction & Architecture'), ('Security Services:', 'Security Services:')], default='', max_length=100)),
                ('deal_type', models.CharField(choices=[('Looking for Financing Provider', 'Looking for Financing Provider'), ('Offering Services', 'Offering Services'), ('In Search of Services Provider', 'In Search of Services Provider'), ('Offering Financing', 'Offering Financing'), ('Offering Leadership Services', 'Offering Leadership Services'), ('In Search of Leadership Services Provider', 'In Search of Leadership Services Provider'), ('Offering Management Services', 'Offering Management Services'), ('In Search of Management Services Provider', 'In Search of Management Services Provider'), ('In Search of Technical Partner', 'In Search of Technical Partner'), ('Offering Technical Services', 'Offering Technical Services')], default='', max_length=50)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('company_name', models.CharField(max_length=50)),
                ('deal_title', models.CharField(max_length=100)),
                ('deal_country', models.CharField(choices=[('GB', 'United Kingdom'), ('AF', 'Afghanistan'), ('AX', 'Aland Islands'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AS', 'American Samoa'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AQ', 'Antarctica'), ('AG', 'Antigua and Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BT', 'Bhutan'), ('BO', 'Bolivia'), ('BA', 'Bosnia and Herzegovina'), ('BW', 'Botswana'), ('BV', 'Bouvet Island'), ('BR', 'Brazil'), ('IO', 'British Indian Ocean Territory'), ('BN', 'Brunei Darussalam'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('CV', 'Cape Verde'), ('KY', 'Cayman Islands'), ('CF', 'Central African Republic'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CX', 'Christmas Island'), ('CC', 'Cocos (Keeling) Islands'), ('CO', 'Colombia'), ('KM', 'Comoros'), ('CG', 'Congo'), ('CD', 'Congo, The Democratic Republic of the'), ('CK', 'Cook Islands'), ('CR', 'Costa Rica'), ('CI', "Cote d'Ivoire"), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CY', 'Cyprus'), ('CZ', 'Czech Republic'), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DO', 'Dominican Republic'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('ET', 'Ethiopia'), ('FK', 'Falkland Islands (Malvinas)'), ('FO', 'Faroe Islands'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('GF', 'French Guiana'), ('PF', 'French Polynesia'), ('TF', 'French Southern Territories'), ('GA', 'Gabon'), ('GM', 'Gambia'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GR', 'Greece'), ('GL', 'Greenland'), ('GD', 'Grenada'), ('GP', 'Guadeloupe'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GG', 'Guernsey'), ('GN', 'Guinea'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('HM', 'Heard Island and McDonald Islands'), ('VA', 'Holy See (Vatican City State)'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Iran, Islamic Republic of'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IM', 'Isle of Man'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JE', 'Jersey'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KP', "Korea, Democratic People's Republic of"), ('KR', 'Korea, Republic of'), ('KW', 'Kuwait'), ('KG', 'Kyrgyzstan'), ('LA', "Lao People's Democratic Republic"), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libyan Arab Jamahiriya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MO', 'Macao'), ('MK', 'Macedonia, The Former Yugoslav Republic of'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('MH', 'Marshall Islands'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('YT', 'Mayotte'), ('MX', 'Mexico'), ('FM', 'Micronesia, Federated States of'), ('MD', 'Moldova'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('ME', 'Montenegro'), ('MS', 'Montserrat'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands'), ('AN', 'Netherlands Antilles'), ('NC', 'New Caledonia'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'Norfolk Island'), ('MP', 'Northern Mariana Islands'), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PS', 'Palestinian Territory, Occupied'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippines'), ('PN', 'Pitcairn'), ('PL', 'Poland'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('RE', 'Reunion'), ('RO', 'Romania'), ('RU', 'Russian Federation'), ('RW', 'Rwanda'), ('BL', 'Saint Barthelemy'), ('SH', 'Saint Helena'), ('KN', 'Saint Kitts and Nevis'), ('LC', 'Saint Lucia'), ('MF', 'Saint Martin'), ('PM', 'Saint Pierre and Miquelon'), ('VC', 'Saint Vincent and the Grenadines'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'Sao Tome and Principe'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('RS', 'Serbia'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('GS', 'South Georgia and the South Sandwich Islands'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SD', 'Sudan'), ('SR', 'Suriname'), ('SJ', 'Svalbard and Jan Mayen'), ('SZ', 'Swaziland'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syrian Arab Republic'), ('TW', 'Taiwan, Province of China'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania, United Republic of'), ('TH', 'Thailand'), ('TL', 'Timor-Leste'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Turkey'), ('TM', 'Turkmenistan'), ('TC', 'Turks and Caicos Islands'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates'), ('US', 'United States'), ('UM', 'United States Minor Outlying Islands'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VE', 'Venezuela'), ('VN', 'Viet Nam'), ('VG', 'Virgin Islands, British'), ('VI', 'Virgin Islands, U.S.'), ('WF', 'Wallis and Futuna'), ('EH', 'Western Sahara'), ('YE', 'Yemen'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')], default='', max_length=2)),
                ('deal_city', models.CharField(default='', max_length=100)),
                ('descriptions', models.TextField(max_length=750)),
                ('active', models.BooleanField(default=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('dealer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Deal',
                'verbose_name_plural': 'Deals',
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='Enterprises',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('slug', models.SlugField(unique=True)),
                ('company_logo', models.ImageField(default='document/maze_field.jpeg', upload_to='document/')),
                ('company_email', models.EmailField(max_length=254)),
                ('registration_id', models.CharField(default='', max_length=50, null=True)),
                ('registration_date', models.DateField(null=True)),
                ('company_name', models.CharField(max_length=50)),
                ('company_type', models.CharField(choices=[('Sole proprietorship', 'Sole proprietorship'), ('Partnership', 'Partnership'), ('Limited liability company (LLC)', 'Limited liability company (LLC)'), ('Corporation', 'Corporation'), ('Cooperative', 'Cooperative'), ('Publicly traded company', 'Publicly traded company'), ('Privately held company', 'Privately held company'), ('Non-profit', 'Non-profit')], default='', max_length=50)),
                ('company_address', models.CharField(max_length=255)),
                ('company_city', models.CharField(max_length=100)),
                ('company_country', models.CharField(choices=[('GB', 'United Kingdom'), ('AF', 'Afghanistan'), ('AX', 'Aland Islands'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AS', 'American Samoa'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AQ', 'Antarctica'), ('AG', 'Antigua and Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BT', 'Bhutan'), ('BO', 'Bolivia'), ('BA', 'Bosnia and Herzegovina'), ('BW', 'Botswana'), ('BV', 'Bouvet Island'), ('BR', 'Brazil'), ('IO', 'British Indian Ocean Territory'), ('BN', 'Brunei Darussalam'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('CV', 'Cape Verde'), ('KY', 'Cayman Islands'), ('CF', 'Central African Republic'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CX', 'Christmas Island'), ('CC', 'Cocos (Keeling) Islands'), ('CO', 'Colombia'), ('KM', 'Comoros'), ('CG', 'Congo'), ('CD', 'Congo, The Democratic Republic of the'), ('CK', 'Cook Islands'), ('CR', 'Costa Rica'), ('CI', "Cote d'Ivoire"), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CY', 'Cyprus'), ('CZ', 'Czech Republic'), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DO', 'Dominican Republic'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('ET', 'Ethiopia'), ('FK', 'Falkland Islands (Malvinas)'), ('FO', 'Faroe Islands'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('GF', 'French Guiana'), ('PF', 'French Polynesia'), ('TF', 'French Southern Territories'), ('GA', 'Gabon'), ('GM', 'Gambia'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GR', 'Greece'), ('GL', 'Greenland'), ('GD', 'Grenada'), ('GP', 'Guadeloupe'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GG', 'Guernsey'), ('GN', 'Guinea'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('HM', 'Heard Island and McDonald Islands'), ('VA', 'Holy See (Vatican City State)'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Iran, Islamic Republic of'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IM', 'Isle of Man'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JE', 'Jersey'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KP', "Korea, Democratic People's Republic of"), ('KR', 'Korea, Republic of'), ('KW', 'Kuwait'), ('KG', 'Kyrgyzstan'), ('LA', "Lao People's Democratic Republic"), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libyan Arab Jamahiriya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MO', 'Macao'), ('MK', 'Macedonia, The Former Yugoslav Republic of'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('MH', 'Marshall Islands'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('YT', 'Mayotte'), ('MX', 'Mexico'), ('FM', 'Micronesia, Federated States of'), ('MD', 'Moldova'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('ME', 'Montenegro'), ('MS', 'Montserrat'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands'), ('AN', 'Netherlands Antilles'), ('NC', 'New Caledonia'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'Norfolk Island'), ('MP', 'Northern Mariana Islands'), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PS', 'Palestinian Territory, Occupied'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippines'), ('PN', 'Pitcairn'), ('PL', 'Poland'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('RE', 'Reunion'), ('RO', 'Romania'), ('RU', 'Russian Federation'), ('RW', 'Rwanda'), ('BL', 'Saint Barthelemy'), ('SH', 'Saint Helena'), ('KN', 'Saint Kitts and Nevis'), ('LC', 'Saint Lucia'), ('MF', 'Saint Martin'), ('PM', 'Saint Pierre and Miquelon'), ('VC', 'Saint Vincent and the Grenadines'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'Sao Tome and Principe'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('RS', 'Serbia'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('GS', 'South Georgia and the South Sandwich Islands'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SD', 'Sudan'), ('SR', 'Suriname'), ('SJ', 'Svalbard and Jan Mayen'), ('SZ', 'Swaziland'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syrian Arab Republic'), ('TW', 'Taiwan, Province of China'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania, United Republic of'), ('TH', 'Thailand'), ('TL', 'Timor-Leste'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Turkey'), ('TM', 'Turkmenistan'), ('TC', 'Turks and Caicos Islands'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates'), ('US', 'United States'), ('UM', 'United States Minor Outlying Islands'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VE', 'Venezuela'), ('VN', 'Viet Nam'), ('VG', 'Virgin Islands, British'), ('VI', 'Virgin Islands, U.S.'), ('WF', 'Wallis and Futuna'), ('EH', 'Western Sahara'), ('YE', 'Yemen'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')], max_length=255)),
                ('company_web', models.CharField(max_length=255)),
                ('commercial', models.BooleanField(default=False, verbose_name='Would like to be a commercial partner')),
                ('technical', models.BooleanField(default=False, verbose_name='Would like to be a technical partner')),
                ('financial', models.BooleanField(default=False, verbose_name='Would like to be a financial partner')),
                ('management', models.BooleanField(default=False, verbose_name='Would like to be a management partner')),
                ('phone_code', models.CharField(choices=[('+1', '+1'), ('+7', '+7'), ('+20', '+20'), ('+27', '+27'), ('+30', '+30'), ('+31', '+31'), ('+32', '+32'), ('+33', '+33'), ('+34', '+34'), ('+36', '+36'), ('+39', '+39'), ('+40', '+40'), ('+41', '+41'), ('+43', '+43'), ('+44', '+44'), ('+45', '+45'), ('+46', '+46'), ('+47', '+47'), ('+48', '+48'), ('+49', '+49'), ('+51', '+51'), ('+52', '+52'), ('+53', '+53'), ('+54', '+54'), ('+55', '+55'), ('+56', '+56'), ('+57', '+57'), ('+58', '+58'), ('+60', '+60'), ('+61', '+61'), ('+62', '+62'), ('+63', '+63'), ('+64', '+64'), ('+64', '+64'), ('+65', '+65'), ('+66', '+66'), ('+81', '+81'), ('+82', '+82'), ('+84', '+84'), ('+86', '+86'), ('+90', '+90'), ('+91', '+91'), ('+92', '+92'), ('+93', '+93'), ('+94', '+94'), ('+95', '+95'), ('+98', '+98'), ('+211', '+211'), ('+212', '+212'), ('+212', '+212'), ('+213', '+213'), ('+216', '+216'), ('+218', '+218'), ('+220', '+220'), ('+221', '+221'), ('+222', '+222'), ('+223', '+223'), ('+224', '+224'), ('+225', '+225'), ('+226', '+226'), ('+227', '+227'), ('+228', '+228'), ('+229', '+229'), ('+230', '+230'), ('+231', '+231'), ('+232', '+232'), ('+233', '+233'), ('+234', '+234'), ('+235', '+235'), ('+236', '+236'), ('+237', '+237'), ('+238', '+238'), ('+239', '+239'), ('+240', '+240'), ('+241', '+241'), ('+242', '+242'), ('+243', '+243'), ('+244', '+244'), ('+245', '+245'), ('+246', '+246'), ('+248', '+248'), ('+249', '+249'), ('+250', '+250'), ('+251', '+251'), ('+252', '+252'), ('+253', '+253'), ('+254', '+254'), ('+255', '+255'), ('+256', '+256'), ('+257', '+257'), ('+258', '+258'), ('+260', '+260'), ('+261', '+261'), ('+262', '+262'), ('+262', '+262'), ('+263', '+263'), ('+264', '+264'), ('+265', '+265'), ('+266', '+266'), ('+267', '+267'), ('+268', '+268'), ('+269', '+269'), ('+290', '+290'), ('+291', '+291'), ('+297', '+297'), ('+298', '+298'), ('+299', '+299'), ('+350', '+350'), ('+351', '+351'), ('+352', '+352'), ('+353', '+353'), ('+354', '+354'), ('+355', '+355'), ('+356', '+356'), ('+357', '+357'), ('+358', '+358'), ('+359', '+359'), ('+370', '+370'), ('+371', '+371'), ('+372', '+372'), ('+373', '+373'), ('+374', '+374'), ('+375', '+375'), ('+376', '+376'), ('+377', '+377'), ('+378', '+378'), ('+379', '+379'), ('+380', '+380'), ('+381', '+381'), ('+382', '+382'), ('+383', '+383'), ('+385', '+385'), ('+386', '+386'), ('+387', '+387'), ('+389', '+389'), ('+420', '+420'), ('+421', '+421'), ('+423', '+423'), ('+500', '+500'), ('+501', '+501'), ('+502', '+502'), ('+503', '+503'), ('+504', '+504'), ('+505', '+505'), ('+506', '+506'), ('+507', '+507'), ('+508', '+508'), ('+509', '+509'), ('+590', '+590'), ('+590', '+590'), ('+591', '+591'), ('+592', '+592'), ('+593', '+593'), ('+595', '+595'), ('+597', '+597'), ('+598', '+598'), ('+599', '+599'), ('+599', '+599'), ('+670', '+670'), ('+672', '+672'), ('+673', '+673'), ('+674', '+674'), ('+675', '+675'), ('+676', '+676'), ('+677', '+677'), ('+678', '+678'), ('+679', '+679'), ('+680', '+680'), ('+681', '+681'), ('+682', '+682'), ('+683', '+683'), ('+685', '+685'), ('+686', '+686'), ('+687', '+687'), ('+688', '+688'), ('+689', '+689'), ('+690', '+690'), ('+691', '+691'), ('+692', '+692'), ('+850', '+850'), ('+852', '+852'), ('+853', '+853'), ('+855', '+855'), ('+856', '+856'), ('+880', '+880'), ('+886', '+886'), ('+960', '+960'), ('+961', '+961'), ('+962', '+962'), ('+963', '+963'), ('+964', '+964'), ('+965', '+965'), ('+966', '+966'), ('+967', '+967'), ('+968', '+968'), ('+970', '+970'), ('+971', '+971'), ('+972', '+972'), ('+973', '+973'), ('+974', '+974'), ('+975', '+975'), ('+976', '+976'), ('+977', '+977'), ('+992', '+992'), ('+993', '+993'), ('+994', '+994'), ('+995', '+995'), ('+996', '+996'), ('+998', '+998'), ('+1242', '+1242'), ('+1246', '+1246'), ('+1264', '+1264'), ('+1268', '+1268'), ('+1284', '+1284'), ('+1340', '+1340'), ('+1345', '+1345'), ('+1441', '+1441'), ('+1473', '+1473'), ('+1649', '+1649'), ('+1664', '+1664'), ('+1670', '+1670'), ('+1671', '+1671'), ('+1684', '+1684'), ('+1721', '+1721'), ('+1758', '+1758'), ('+1767', '+1767'), ('+1784', '+1784'), ('+1868', '+1868'), ('+1869', '+1869'), ('+1876', '+1876'), ('+4779', '+4779'), ('+441481', '+441481'), ('+441534', '+441534'), ('+441624', '+441624')], max_length=10)),
                ('phone_number', models.CharField(max_length=10)),
                ('number_employees', models.CharField(choices=[('1', 'Less than 10 employees'), ('2', '11 - 25 employees'), ('3', '26 - 50 employees'), ('4', '51 - 100 employees'), ('5', '101 - 250 employees '), ('6', 'More than 250 employees')], default='0_10', max_length=15)),
                ('annual_revenue', models.CharField(choices=[('1', 'Less than 150 000 000'), ('2', '150 000 000 -  500 000 000'), ('3', '500 000 001 - 1 000 000 000'), ('4', 'More 1 000 000 000 ')], default='0_150 000 000', max_length=50)),
                ('currency', models.CharField(choices=[('AED (United Arab Emirates Dirham) - د.إ', 'AED (United Arab Emirates Dirham) - د.إ'), ('Algerian Dinar (DZD) - د.ج', 'Algerian Dinar (DZD) - د.ج'), ('Angolan Kwanza (AOA) - Kz', 'Angolan Kwanza (AOA) - Kz'), ('ARS (Argentine Peso) - $', 'ARS (Argentine Peso) - $'), ('AUD (Australian Dollar) - A$', 'AUD (Australian Dollar) - A$'), ('BDT (Bangladeshi Taka) - ৳', 'BDT (Bangladeshi Taka) - ৳'), ('Botswana Pula (BWP) - P', 'Botswana Pula (BWP) - P'), ('BRL (Brazilian Real) - R$', 'BRL (Brazilian Real) - R$'), ('Burundian Franc (BIF)', 'Burundian Franc (BIF)'), ('CAD (Canadian Dollar) - C$', 'CAD (Canadian Dollar) - C$'), ('Cape Verdean Escudo (CVE) - $ or Esc', 'Cape Verdean Escudo (CVE) - $ or Esc'), ('Central African CFA Franc (XAF) - FCFA', 'Central African CFA Franc (XAF) - FCFA'), ('CHF (Swiss Franc) - CHF', 'CHF (Swiss Franc) - CHF'), ('CLP (Chilean Peso) - $', 'CLP (Chilean Peso) - $'), ('CNY (Chinese Yuan Renminbi) - ¥ or 元', 'CNY (Chinese Yuan Renminbi) - ¥ or 元'), ('Comorian Franc (KMF)', 'Comorian Franc (KMF)'), ('Congolese Franc (CDF) - FC', 'Congolese Franc (CDF) - FC'), ('COP (Colombian Peso) - $', 'COP (Colombian Peso) - $'), ('CZK (Czech Koruna) - Kč', 'CZK (Czech Koruna) - Kč'), ('Djiboutian Franc (DJF)', 'Djiboutian Franc (DJF)'), ('DKK (Danish Krone) - kr', 'DKK (Danish Krone) - kr'), ('EGP (Egyptian Pound) - £ or ج.م', 'EGP (Egyptian Pound) - £ or ج.م'), ('Egyptian Pound (EGP) - £ or ج.م', 'Egyptian Pound (EGP) - £ or ج.م'), ('Eritrean Nakfa (ERN) - Nfk', 'Eritrean Nakfa (ERN) - Nfk'), ('Ethiopian Birr (ETB) - Br', 'Ethiopian Birr (ETB) - Br'), ('EUR (Euro) - €', 'EUR (Euro) - €'), ('Gambian Dalasi (GMD) - D', 'Gambian Dalasi (GMD) - D'), ('GBP (British Pound Sterling) - £', 'GBP (British Pound Sterling) - £'), ('Ghanaian Cedi (GHS) - GH₵', 'Ghanaian Cedi (GHS) - GH₵'), ('Guinean Franc (GNF) - GFr', 'Guinean Franc (GNF) - GFr'), ('HKD (Hong Kong Dollar) - HK$', 'HKD (Hong Kong Dollar) - HK$'), ('HUF (Hungarian Forint) - Ft', 'HUF (Hungarian Forint) - Ft'), ('IDR (Indonesian Rupiah) - Rp', 'IDR (Indonesian Rupiah) - Rp'), ('ILS (Israeli New Shekel) - ₪', 'ILS (Israeli New Shekel) - ₪'), ('INR (Indian Rupee) - ₹', 'INR (Indian Rupee) - ₹'), ('IQD (Iraqi Dinar) - ع.د', 'IQD (Iraqi Dinar) - ع.د'), ('JPY (Japanese Yen) - ¥', 'JPY (Japanese Yen) - ¥'), ('Kenyan Shilling (KES) - KSh', 'Kenyan Shilling (KES) - KSh'), ('KRW (South Korean Won) - ₩', 'KRW (South Korean Won) - ₩'), ('Lesotho Loti (LSL) - L', 'Lesotho Loti (LSL) - L'), ('Liberian Dollar (LRD) - $', 'Liberian Dollar (LRD) - $'), ('Libyan Dinar (LYD) - ل.د', 'Libyan Dinar (LYD) - ل.د'), ('Malagasy Ariary (MGA)', 'Malagasy Ariary (MGA)'), ('Malawian Kwacha (MWK) - MK', 'Malawian Kwacha (MWK) - MK'), ('Mauritanian Ouguiya (MRU) - UM', 'Mauritanian Ouguiya (MRU) - UM'), ('Mauritian Rupee (MUR) - ₨', 'Mauritian Rupee (MUR) - ₨'), ('Moroccan Dirham (MAD) - د.م.', 'Moroccan Dirham (MAD) - د.م.'), ('Mozambican Metical (MZN) - MT', 'Mozambican Metical (MZN) - MT'), ('MXN (Mexican Peso) - $', 'MXN (Mexican Peso) - $'), ('MYR (Malaysian Ringgit) - RM', 'MYR (Malaysian Ringgit) - RM'), ('Namibian Dollar (NAD) - $', 'Namibian Dollar (NAD) - $'), ('NGN (Nigerian Naira) - ₦', 'NGN (Nigerian Naira) - ₦'), ('NOK (Norwegian Krone) - kr', 'NOK (Norwegian Krone) - kr'), ('NZD (New Zealand Dollar) - NZ$', 'NZD (New Zealand Dollar) - NZ$'), ('PHP (Philippine Peso) - ₱', 'PHP (Philippine Peso) - ₱'), ('PKR (Pakistani Rupee) - ₨', 'PKR (Pakistani Rupee) - ₨'), ('PLN (Polish Zloty) - zł', 'PLN (Polish Zloty) - zł'), ('RON (Romanian Leu) - lei', 'RON (Romanian Leu) - lei'), ('RUB (Russian Ruble) - ₽', 'RUB (Russian Ruble) - ₽'), ('Rwandan Franc (RWF)', 'Rwandan Franc (RWF)'), ('São Tomé and Príncipe Dobra (STN) - Db', 'São Tomé and Príncipe Dobra (STN) - Db'), ('SAR (Saudi Riyal) - ﷼', 'SAR (Saudi Riyal) - ﷼'), ('SEK (Swedish Krona) - kr', 'SEK (Swedish Krona) - kr'), ('Seychellois Rupee (SCR) - ₨', 'Seychellois Rupee (SCR) - ₨'), ('SGD (Singapore Dollar) - S$', 'SGD (Singapore Dollar) - S$'), ('Sierra Leonean Leone (SLL) - Le', 'Sierra Leonean Leone (SLL) - Le'), ('Somali Shilling (SOS) - Sh.So.', 'Somali Shilling (SOS) - Sh.So.'), ('South African Rand (ZAR) - R', 'South African Rand (ZAR) - R'), ('South Sudanese Pound (SSP)', 'South Sudanese Pound (SSP)'), ('Sudanese Pound (SDG) - ج.س', 'Sudanese Pound (SDG) - ج.س'), ('Swazi Lilangeni (SZL) - L', 'Swazi Lilangeni (SZL) - L'), ('SYP (Syrian Pound) - £ or ل.س', 'SYP (Syrian Pound) - £ or ل.س'), ('Tanzanian Shilling (TZS) - Sh', 'Tanzanian Shilling (TZS) - Sh'), ('THB (Thai Baht) - ฿', 'THB (Thai Baht) - ฿'), ('TRY (Turkish Lira) - ₺', 'TRY (Turkish Lira) - ₺'), ('Tunisian Dinar (TND) - د.ت', 'Tunisian Dinar (TND) - د.ت'), ('TWD (New Taiwan Dollar) - NT$', 'TWD (New Taiwan Dollar) - NT$'), ('Ugandan Shilling (UGX) - USh', 'Ugandan Shilling (UGX) - USh'), ('USD (United States Dollar) - $', 'USD (United States Dollar) - $'), ('West African CFA Franc (XOF) - CFA', 'West African CFA Franc (XOF) - CFA'), ('Zambian Kwacha (ZMW) - ZK', 'Zambian Kwacha (ZMW) - ZK'), ('ZAR (South African Rand) - R', 'ZAR (South African Rand) - R'), ('Zimbabwean Dollar (ZWL) - $', 'Zimbabwean Dollar (ZWL) - $')], default='', max_length=50)),
                ('activity_description', models.TextField(max_length=500, verbose_name="Tell us more about your company's activities ")),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Enterprise',
                'verbose_name_plural': 'Enterprises',
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='FicheTechnic',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('slug', models.SlugField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('fiche_avatar', models.ImageField(default='document/maze_field.jpeg', upload_to='document/')),
                ('description', models.TextField(max_length=4500)),
                ('category', models.CharField(choices=[('Agriculture', 'Agriculture'), ('Elevage', 'Elevage'), ('Pisciculture', 'Pisciculture')], max_length=100)),
                ('Expertise_level', models.CharField(choices=[('No Expertise needed', 'No Expertise Needed'), ('Minimum Level', 'Minimum Level'), ('Medium Level', 'Medium Level'), ('High Level', 'high level')], max_length=100)),
                ('Technical_factors', models.TextField(blank=True, max_length=4500, null=True, verbose_name='This include climate,season, soil preparation,seeds, semis, care, conditions, and protection')),
                ('principal_risks', models.TextField(blank=True, max_length=3368, null=True)),
                ('harvest_factors', models.TextField(blank=True, max_length=4500, null=True, verbose_name='Include how to harvest, post harvest conditioning, yield')),
                ('marketing_factor', models.TextField(blank=True, max_length=4500, null=True, verbose_name='include seed supplier, equipment cost, storage requirements, average price per unit (acre, kilo, tone...), average cost ')),
                ('industrialization_factors', models.TextField(blank=True, max_length=4500, null=True, verbose_name='what to consider if industrializing')),
                ('other_factors', models.TextField(blank=True, max_length=5100, null=True, verbose_name='Import Export opportunities, main producers, main consumers...')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'FicheTechnic',
                'verbose_name_plural': 'FicheTechnics',
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='Industry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(max_length=255)),
            ],
            options={
                'verbose_name': 'Industry',
                'verbose_name_plural': 'Industries',
            },
        ),
        migrations.CreateModel(
            name='Pricing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='pricing tier')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('slug', models.SlugField(null=True, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('category', models.CharField(default='', max_length=100)),
                ('description', models.CharField(default='', max_length=255)),
                ('product_features', models.CharField(default='', max_length=255)),
                ('monthly_price', models.PositiveIntegerField(default=0)),
                ('yearly_price', models.PositiveIntegerField(default=0)),
                ('monthly_link', models.URLField(default='')),
                ('yearly_link', models.URLField(default='')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ('monthly_price',),
            },
        ),
        migrations.CreateModel(
            name='ProductDeals',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('slug', models.SlugField(max_length=120, unique=True)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('product_deal_title', models.CharField(max_length=100)),
                ('opportunity_type', models.CharField(choices=[('Looking for a seller', 'Looking for a Seller'), ('Looking for a Buyer', 'Looking for a Buyer')], max_length=50)),
                ('company_name', models.CharField(default='', max_length=50)),
                ('product_name', models.CharField(max_length=255)),
                ('product_category', models.CharField(choices=[('Electronics', 'Electronics'), ('Fashion & Apparel', 'Fashion & Apparel'), ('Home & Furniture', 'Home & Furniture'), ('Beauty & Personal Care', 'Beauty & Personal Care'), ('Automobiles & Vehicles', 'Automobiles & Vehicles'), ('Books & Stationery', 'Books & Stationery'), ('Food & Beverages', 'Food & Beverages'), ('Health & Wellness', 'Health & Wellness'), ('Toys & Games', 'Toys & Games'), ('Home Appliances', 'Home Appliances'), ('Sports & Outdoors:', 'Sports & Outdoors:'), ('Gardening & Landscaping', 'Gardening & Landscaping'), ('DIY & Home Improvement', 'DIY & Home Improvement'), ('Music & Entertainment', 'Music & Entertainment'), ('Pet Supplies & Products', 'Pet Supplies & Products'), ('Software & Apps', 'Software & Apps'), ('Industrial & B2B Products', 'Industrial & B2B Products'), ('Art & Crafts', 'Art & Crafts'), ('Travel & Leisure Products', 'Travel & Leisure Products'), ('Real Estate:', 'Real Estate:'), ('Agriculture Products', 'Agriculture Products')], max_length=100, verbose_name='Enter Your Product Category')),
                ('product_description', models.TextField()),
                ('city', models.CharField(default='', max_length=100)),
                ('country', models.CharField(choices=[('GB', 'United Kingdom'), ('AF', 'Afghanistan'), ('AX', 'Aland Islands'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AS', 'American Samoa'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AQ', 'Antarctica'), ('AG', 'Antigua and Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BT', 'Bhutan'), ('BO', 'Bolivia'), ('BA', 'Bosnia and Herzegovina'), ('BW', 'Botswana'), ('BV', 'Bouvet Island'), ('BR', 'Brazil'), ('IO', 'British Indian Ocean Territory'), ('BN', 'Brunei Darussalam'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('CV', 'Cape Verde'), ('KY', 'Cayman Islands'), ('CF', 'Central African Republic'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CX', 'Christmas Island'), ('CC', 'Cocos (Keeling) Islands'), ('CO', 'Colombia'), ('KM', 'Comoros'), ('CG', 'Congo'), ('CD', 'Congo, The Democratic Republic of the'), ('CK', 'Cook Islands'), ('CR', 'Costa Rica'), ('CI', "Cote d'Ivoire"), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CY', 'Cyprus'), ('CZ', 'Czech Republic'), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DO', 'Dominican Republic'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('ET', 'Ethiopia'), ('FK', 'Falkland Islands (Malvinas)'), ('FO', 'Faroe Islands'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('GF', 'French Guiana'), ('PF', 'French Polynesia'), ('TF', 'French Southern Territories'), ('GA', 'Gabon'), ('GM', 'Gambia'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GR', 'Greece'), ('GL', 'Greenland'), ('GD', 'Grenada'), ('GP', 'Guadeloupe'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GG', 'Guernsey'), ('GN', 'Guinea'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('HM', 'Heard Island and McDonald Islands'), ('VA', 'Holy See (Vatican City State)'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Iran, Islamic Republic of'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IM', 'Isle of Man'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JE', 'Jersey'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KP', "Korea, Democratic People's Republic of"), ('KR', 'Korea, Republic of'), ('KW', 'Kuwait'), ('KG', 'Kyrgyzstan'), ('LA', "Lao People's Democratic Republic"), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libyan Arab Jamahiriya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MO', 'Macao'), ('MK', 'Macedonia, The Former Yugoslav Republic of'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('MH', 'Marshall Islands'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('YT', 'Mayotte'), ('MX', 'Mexico'), ('FM', 'Micronesia, Federated States of'), ('MD', 'Moldova'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('ME', 'Montenegro'), ('MS', 'Montserrat'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands'), ('AN', 'Netherlands Antilles'), ('NC', 'New Caledonia'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'Norfolk Island'), ('MP', 'Northern Mariana Islands'), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PS', 'Palestinian Territory, Occupied'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippines'), ('PN', 'Pitcairn'), ('PL', 'Poland'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('RE', 'Reunion'), ('RO', 'Romania'), ('RU', 'Russian Federation'), ('RW', 'Rwanda'), ('BL', 'Saint Barthelemy'), ('SH', 'Saint Helena'), ('KN', 'Saint Kitts and Nevis'), ('LC', 'Saint Lucia'), ('MF', 'Saint Martin'), ('PM', 'Saint Pierre and Miquelon'), ('VC', 'Saint Vincent and the Grenadines'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'Sao Tome and Principe'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('RS', 'Serbia'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('GS', 'South Georgia and the South Sandwich Islands'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SD', 'Sudan'), ('SR', 'Suriname'), ('SJ', 'Svalbard and Jan Mayen'), ('SZ', 'Swaziland'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syrian Arab Republic'), ('TW', 'Taiwan, Province of China'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania, United Republic of'), ('TH', 'Thailand'), ('TL', 'Timor-Leste'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Turkey'), ('TM', 'Turkmenistan'), ('TC', 'Turks and Caicos Islands'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates'), ('US', 'United States'), ('UM', 'United States Minor Outlying Islands'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VE', 'Venezuela'), ('VN', 'Viet Nam'), ('VG', 'Virgin Islands, British'), ('VI', 'Virgin Islands, U.S.'), ('WF', 'Wallis and Futuna'), ('EH', 'Western Sahara'), ('YE', 'Yemen'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')], max_length=100)),
                ('availability_date', models.DateField()),
                ('stock_quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('quantity_unit', models.CharField(choices=[('Unit', 'Unit'), ('Meter (m) - length', 'Meter (m) - length'), ('foot (ft) - length ', 'foot (ft) - length '), ('yard (yd) - length ', 'yard (yd) - length '), ('mile (mi) - length ', 'mile (mi) - length '), ('Inch (in) - length  ', 'Inch (in) - length  '), ('Kilogram (kg) - weight/mass', 'Kilogram (kg) - weight/mass'), ('Tonne (t) - weight/mass', 'Tonne (t) - weight/mass'), ('Pound (lb) - weight/mass', 'Pound (lb) - weight/mass'), ('ounce (oz) - weight/mass', 'ounce (oz) - weight/mass'), ('ounce (oz) - volume ', 'ounce (oz) - volume '), ('Square inches (in²) - area', 'Square inches (in²) - area'), ('Square meter (m²) - area', 'Square meter (m²) - area'), ('hectares - area', 'hectares - area'), ('acres - area', 'acres - area'), ('square feet (ft²) - area', 'square feet (ft²) - area'), ('Gallon (gal) - volume ', 'Gallon (gal) - volume '), ('Liter (L) - volume', 'Liter (L) - volume'), ('pint (pt) - volume ', 'pint (pt) - volume ')], default='', max_length=100)),
                ('is_available', models.BooleanField(default=True)),
                ('announcement_date', models.DateTimeField(auto_now_add=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Price Per Unit')),
                ('currency', models.CharField(blank=True, choices=[('AED (United Arab Emirates Dirham) - د.إ', 'AED (United Arab Emirates Dirham) - د.إ'), ('Algerian Dinar (DZD) - د.ج', 'Algerian Dinar (DZD) - د.ج'), ('Angolan Kwanza (AOA) - Kz', 'Angolan Kwanza (AOA) - Kz'), ('ARS (Argentine Peso) - $', 'ARS (Argentine Peso) - $'), ('AUD (Australian Dollar) - A$', 'AUD (Australian Dollar) - A$'), ('BDT (Bangladeshi Taka) - ৳', 'BDT (Bangladeshi Taka) - ৳'), ('Botswana Pula (BWP) - P', 'Botswana Pula (BWP) - P'), ('BRL (Brazilian Real) - R$', 'BRL (Brazilian Real) - R$'), ('Burundian Franc (BIF)', 'Burundian Franc (BIF)'), ('CAD (Canadian Dollar) - C$', 'CAD (Canadian Dollar) - C$'), ('Cape Verdean Escudo (CVE) - $ or Esc', 'Cape Verdean Escudo (CVE) - $ or Esc'), ('Central African CFA Franc (XAF) - FCFA', 'Central African CFA Franc (XAF) - FCFA'), ('CHF (Swiss Franc) - CHF', 'CHF (Swiss Franc) - CHF'), ('CLP (Chilean Peso) - $', 'CLP (Chilean Peso) - $'), ('CNY (Chinese Yuan Renminbi) - ¥ or 元', 'CNY (Chinese Yuan Renminbi) - ¥ or 元'), ('Comorian Franc (KMF)', 'Comorian Franc (KMF)'), ('Congolese Franc (CDF) - FC', 'Congolese Franc (CDF) - FC'), ('COP (Colombian Peso) - $', 'COP (Colombian Peso) - $'), ('CZK (Czech Koruna) - Kč', 'CZK (Czech Koruna) - Kč'), ('Djiboutian Franc (DJF)', 'Djiboutian Franc (DJF)'), ('DKK (Danish Krone) - kr', 'DKK (Danish Krone) - kr'), ('EGP (Egyptian Pound) - £ or ج.م', 'EGP (Egyptian Pound) - £ or ج.م'), ('Egyptian Pound (EGP) - £ or ج.م', 'Egyptian Pound (EGP) - £ or ج.م'), ('Eritrean Nakfa (ERN) - Nfk', 'Eritrean Nakfa (ERN) - Nfk'), ('Ethiopian Birr (ETB) - Br', 'Ethiopian Birr (ETB) - Br'), ('EUR (Euro) - €', 'EUR (Euro) - €'), ('Gambian Dalasi (GMD) - D', 'Gambian Dalasi (GMD) - D'), ('GBP (British Pound Sterling) - £', 'GBP (British Pound Sterling) - £'), ('Ghanaian Cedi (GHS) - GH₵', 'Ghanaian Cedi (GHS) - GH₵'), ('Guinean Franc (GNF) - GFr', 'Guinean Franc (GNF) - GFr'), ('HKD (Hong Kong Dollar) - HK$', 'HKD (Hong Kong Dollar) - HK$'), ('HUF (Hungarian Forint) - Ft', 'HUF (Hungarian Forint) - Ft'), ('IDR (Indonesian Rupiah) - Rp', 'IDR (Indonesian Rupiah) - Rp'), ('ILS (Israeli New Shekel) - ₪', 'ILS (Israeli New Shekel) - ₪'), ('INR (Indian Rupee) - ₹', 'INR (Indian Rupee) - ₹'), ('IQD (Iraqi Dinar) - ع.د', 'IQD (Iraqi Dinar) - ع.د'), ('JPY (Japanese Yen) - ¥', 'JPY (Japanese Yen) - ¥'), ('Kenyan Shilling (KES) - KSh', 'Kenyan Shilling (KES) - KSh'), ('KRW (South Korean Won) - ₩', 'KRW (South Korean Won) - ₩'), ('Lesotho Loti (LSL) - L', 'Lesotho Loti (LSL) - L'), ('Liberian Dollar (LRD) - $', 'Liberian Dollar (LRD) - $'), ('Libyan Dinar (LYD) - ل.د', 'Libyan Dinar (LYD) - ل.د'), ('Malagasy Ariary (MGA)', 'Malagasy Ariary (MGA)'), ('Malawian Kwacha (MWK) - MK', 'Malawian Kwacha (MWK) - MK'), ('Mauritanian Ouguiya (MRU) - UM', 'Mauritanian Ouguiya (MRU) - UM'), ('Mauritian Rupee (MUR) - ₨', 'Mauritian Rupee (MUR) - ₨'), ('Moroccan Dirham (MAD) - د.م.', 'Moroccan Dirham (MAD) - د.م.'), ('Mozambican Metical (MZN) - MT', 'Mozambican Metical (MZN) - MT'), ('MXN (Mexican Peso) - $', 'MXN (Mexican Peso) - $'), ('MYR (Malaysian Ringgit) - RM', 'MYR (Malaysian Ringgit) - RM'), ('Namibian Dollar (NAD) - $', 'Namibian Dollar (NAD) - $'), ('NGN (Nigerian Naira) - ₦', 'NGN (Nigerian Naira) - ₦'), ('NOK (Norwegian Krone) - kr', 'NOK (Norwegian Krone) - kr'), ('NZD (New Zealand Dollar) - NZ$', 'NZD (New Zealand Dollar) - NZ$'), ('PHP (Philippine Peso) - ₱', 'PHP (Philippine Peso) - ₱'), ('PKR (Pakistani Rupee) - ₨', 'PKR (Pakistani Rupee) - ₨'), ('PLN (Polish Zloty) - zł', 'PLN (Polish Zloty) - zł'), ('RON (Romanian Leu) - lei', 'RON (Romanian Leu) - lei'), ('RUB (Russian Ruble) - ₽', 'RUB (Russian Ruble) - ₽'), ('Rwandan Franc (RWF)', 'Rwandan Franc (RWF)'), ('São Tomé and Príncipe Dobra (STN) - Db', 'São Tomé and Príncipe Dobra (STN) - Db'), ('SAR (Saudi Riyal) - ﷼', 'SAR (Saudi Riyal) - ﷼'), ('SEK (Swedish Krona) - kr', 'SEK (Swedish Krona) - kr'), ('Seychellois Rupee (SCR) - ₨', 'Seychellois Rupee (SCR) - ₨'), ('SGD (Singapore Dollar) - S$', 'SGD (Singapore Dollar) - S$'), ('Sierra Leonean Leone (SLL) - Le', 'Sierra Leonean Leone (SLL) - Le'), ('Somali Shilling (SOS) - Sh.So.', 'Somali Shilling (SOS) - Sh.So.'), ('South African Rand (ZAR) - R', 'South African Rand (ZAR) - R'), ('South Sudanese Pound (SSP)', 'South Sudanese Pound (SSP)'), ('Sudanese Pound (SDG) - ج.س', 'Sudanese Pound (SDG) - ج.س'), ('Swazi Lilangeni (SZL) - L', 'Swazi Lilangeni (SZL) - L'), ('SYP (Syrian Pound) - £ or ل.س', 'SYP (Syrian Pound) - £ or ل.س'), ('Tanzanian Shilling (TZS) - Sh', 'Tanzanian Shilling (TZS) - Sh'), ('THB (Thai Baht) - ฿', 'THB (Thai Baht) - ฿'), ('TRY (Turkish Lira) - ₺', 'TRY (Turkish Lira) - ₺'), ('Tunisian Dinar (TND) - د.ت', 'Tunisian Dinar (TND) - د.ت'), ('TWD (New Taiwan Dollar) - NT$', 'TWD (New Taiwan Dollar) - NT$'), ('Ugandan Shilling (UGX) - USh', 'Ugandan Shilling (UGX) - USh'), ('USD (United States Dollar) - $', 'USD (United States Dollar) - $'), ('West African CFA Franc (XOF) - CFA', 'West African CFA Franc (XOF) - CFA'), ('Zambian Kwacha (ZMW) - ZK', 'Zambian Kwacha (ZMW) - ZK'), ('ZAR (South African Rand) - R', 'ZAR (South African Rand) - R'), ('Zimbabwean Dollar (ZWL) - $', 'Zimbabwean Dollar (ZWL) - $')], max_length=100, null=True)),
                ('discount', models.CharField(blank=True, choices=[('5%', '5%'), ('10%', '10%'), ('15%', '15%'), ('20%', '20%')], max_length=5, null=True)),
                ('notes', models.TextField(blank=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('dealer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_deals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Product Deal',
                'verbose_name_plural': 'Product Deals',
                'ordering': ('-announcement_date',),
            },
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=100)),
                ('work_location_address', models.CharField(max_length=100)),
                ('work_city', models.CharField(max_length=100, verbose_name='Enter the City where the work is located')),
                ('work_country', models.CharField(choices=[('GB', 'United Kingdom'), ('AF', 'Afghanistan'), ('AX', 'Aland Islands'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AS', 'American Samoa'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AQ', 'Antarctica'), ('AG', 'Antigua and Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BT', 'Bhutan'), ('BO', 'Bolivia'), ('BA', 'Bosnia and Herzegovina'), ('BW', 'Botswana'), ('BV', 'Bouvet Island'), ('BR', 'Brazil'), ('IO', 'British Indian Ocean Territory'), ('BN', 'Brunei Darussalam'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('CV', 'Cape Verde'), ('KY', 'Cayman Islands'), ('CF', 'Central African Republic'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CX', 'Christmas Island'), ('CC', 'Cocos (Keeling) Islands'), ('CO', 'Colombia'), ('KM', 'Comoros'), ('CG', 'Congo'), ('CD', 'Congo, The Democratic Republic of the'), ('CK', 'Cook Islands'), ('CR', 'Costa Rica'), ('CI', "Cote d'Ivoire"), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CY', 'Cyprus'), ('CZ', 'Czech Republic'), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DO', 'Dominican Republic'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('ET', 'Ethiopia'), ('FK', 'Falkland Islands (Malvinas)'), ('FO', 'Faroe Islands'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('GF', 'French Guiana'), ('PF', 'French Polynesia'), ('TF', 'French Southern Territories'), ('GA', 'Gabon'), ('GM', 'Gambia'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GR', 'Greece'), ('GL', 'Greenland'), ('GD', 'Grenada'), ('GP', 'Guadeloupe'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GG', 'Guernsey'), ('GN', 'Guinea'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('HM', 'Heard Island and McDonald Islands'), ('VA', 'Holy See (Vatican City State)'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Iran, Islamic Republic of'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IM', 'Isle of Man'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JE', 'Jersey'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KP', "Korea, Democratic People's Republic of"), ('KR', 'Korea, Republic of'), ('KW', 'Kuwait'), ('KG', 'Kyrgyzstan'), ('LA', "Lao People's Democratic Republic"), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libyan Arab Jamahiriya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MO', 'Macao'), ('MK', 'Macedonia, The Former Yugoslav Republic of'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('MH', 'Marshall Islands'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('YT', 'Mayotte'), ('MX', 'Mexico'), ('FM', 'Micronesia, Federated States of'), ('MD', 'Moldova'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('ME', 'Montenegro'), ('MS', 'Montserrat'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands'), ('AN', 'Netherlands Antilles'), ('NC', 'New Caledonia'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'Norfolk Island'), ('MP', 'Northern Mariana Islands'), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PS', 'Palestinian Territory, Occupied'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippines'), ('PN', 'Pitcairn'), ('PL', 'Poland'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('RE', 'Reunion'), ('RO', 'Romania'), ('RU', 'Russian Federation'), ('RW', 'Rwanda'), ('BL', 'Saint Barthelemy'), ('SH', 'Saint Helena'), ('KN', 'Saint Kitts and Nevis'), ('LC', 'Saint Lucia'), ('MF', 'Saint Martin'), ('PM', 'Saint Pierre and Miquelon'), ('VC', 'Saint Vincent and the Grenadines'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'Sao Tome and Principe'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('RS', 'Serbia'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('GS', 'South Georgia and the South Sandwich Islands'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SD', 'Sudan'), ('SR', 'Suriname'), ('SJ', 'Svalbard and Jan Mayen'), ('SZ', 'Swaziland'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syrian Arab Republic'), ('TW', 'Taiwan, Province of China'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania, United Republic of'), ('TH', 'Thailand'), ('TL', 'Timor-Leste'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Turkey'), ('TM', 'Turkmenistan'), ('TC', 'Turks and Caicos Islands'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates'), ('US', 'United States'), ('UM', 'United States Minor Outlying Islands'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VE', 'Venezuela'), ('VN', 'Viet Nam'), ('VG', 'Virgin Islands, British'), ('VI', 'Virgin Islands, U.S.'), ('WF', 'Wallis and Futuna'), ('EH', 'Western Sahara'), ('YE', 'Yemen'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')], max_length=50)),
                ('job_title', models.CharField(default='', max_length=100, verbose_name='Enter Your Job Title')),
                ('position', models.CharField(max_length=100, verbose_name='Enter Your Position')),
                ('start_date', models.DateField(verbose_name='Enter the starting date of this position')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Enter the end date of this position. If still in the position leave it blank')),
                ('description', models.TextField(blank=True)),
                ('created_on', models.DateField(auto_now_add=True)),
                ('updated_on', models.DateField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Work history',
                'verbose_name_plural': 'Work history',
                'ordering': ('-start_date',),
            },
        ),
        migrations.CreateModel(
            name='Trainings',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('slug', models.SlugField(max_length=200)),
                ('teacher', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('training_title', models.CharField(default='', max_length=100)),
                ('training_type', models.CharField(choices=[('TECHNOLOGY', 'TECHNOLOGY'), ('INFORMATION TECHNOLOGY', 'INFORMATION TECHNOLOGY'), ('FINANCE', 'FINANCE'), ('FINANCIAL MODELING', 'FINANCIAL MODELING'), ('DATA ANALYSIS', 'DATA ANALYSIS')], max_length=100)),
                ('domain', models.CharField(choices=[('FINANCE', 'FINANCE')], max_length=100)),
                ('venue_address', models.CharField(default='', max_length=100)),
                ('city', models.CharField(default='', max_length=100)),
                ('country', models.CharField(choices=[('GB', 'United Kingdom'), ('AF', 'Afghanistan'), ('AX', 'Aland Islands'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AS', 'American Samoa'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AQ', 'Antarctica'), ('AG', 'Antigua and Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BT', 'Bhutan'), ('BO', 'Bolivia'), ('BA', 'Bosnia and Herzegovina'), ('BW', 'Botswana'), ('BV', 'Bouvet Island'), ('BR', 'Brazil'), ('IO', 'British Indian Ocean Territory'), ('BN', 'Brunei Darussalam'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('CV', 'Cape Verde'), ('KY', 'Cayman Islands'), ('CF', 'Central African Republic'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CX', 'Christmas Island'), ('CC', 'Cocos (Keeling) Islands'), ('CO', 'Colombia'), ('KM', 'Comoros'), ('CG', 'Congo'), ('CD', 'Congo, The Democratic Republic of the'), ('CK', 'Cook Islands'), ('CR', 'Costa Rica'), ('CI', "Cote d'Ivoire"), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CY', 'Cyprus'), ('CZ', 'Czech Republic'), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DO', 'Dominican Republic'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('ET', 'Ethiopia'), ('FK', 'Falkland Islands (Malvinas)'), ('FO', 'Faroe Islands'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('GF', 'French Guiana'), ('PF', 'French Polynesia'), ('TF', 'French Southern Territories'), ('GA', 'Gabon'), ('GM', 'Gambia'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GR', 'Greece'), ('GL', 'Greenland'), ('GD', 'Grenada'), ('GP', 'Guadeloupe'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GG', 'Guernsey'), ('GN', 'Guinea'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('HM', 'Heard Island and McDonald Islands'), ('VA', 'Holy See (Vatican City State)'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Iran, Islamic Republic of'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IM', 'Isle of Man'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JE', 'Jersey'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KP', "Korea, Democratic People's Republic of"), ('KR', 'Korea, Republic of'), ('KW', 'Kuwait'), ('KG', 'Kyrgyzstan'), ('LA', "Lao People's Democratic Republic"), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libyan Arab Jamahiriya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MO', 'Macao'), ('MK', 'Macedonia, The Former Yugoslav Republic of'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('MH', 'Marshall Islands'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('YT', 'Mayotte'), ('MX', 'Mexico'), ('FM', 'Micronesia, Federated States of'), ('MD', 'Moldova'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('ME', 'Montenegro'), ('MS', 'Montserrat'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands'), ('AN', 'Netherlands Antilles'), ('NC', 'New Caledonia'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'Norfolk Island'), ('MP', 'Northern Mariana Islands'), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PS', 'Palestinian Territory, Occupied'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippines'), ('PN', 'Pitcairn'), ('PL', 'Poland'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('RE', 'Reunion'), ('RO', 'Romania'), ('RU', 'Russian Federation'), ('RW', 'Rwanda'), ('BL', 'Saint Barthelemy'), ('SH', 'Saint Helena'), ('KN', 'Saint Kitts and Nevis'), ('LC', 'Saint Lucia'), ('MF', 'Saint Martin'), ('PM', 'Saint Pierre and Miquelon'), ('VC', 'Saint Vincent and the Grenadines'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'Sao Tome and Principe'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('RS', 'Serbia'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('GS', 'South Georgia and the South Sandwich Islands'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SD', 'Sudan'), ('SR', 'Suriname'), ('SJ', 'Svalbard and Jan Mayen'), ('SZ', 'Swaziland'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syrian Arab Republic'), ('TW', 'Taiwan, Province of China'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania, United Republic of'), ('TH', 'Thailand'), ('TL', 'Timor-Leste'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Turkey'), ('TM', 'Turkmenistan'), ('TC', 'Turks and Caicos Islands'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates'), ('US', 'United States'), ('UM', 'United States Minor Outlying Islands'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VE', 'Venezuela'), ('VN', 'Viet Nam'), ('VG', 'Virgin Islands, British'), ('VI', 'Virgin Islands, U.S.'), ('WF', 'Wallis and Futuna'), ('EH', 'Western Sahara'), ('YE', 'Yemen'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')], default='', max_length=100)),
                ('duration', models.CharField(choices=[('0:30 PER DAY', '0:30 PER DAY'), ('0:45 PER DAY', '0:45 PER DAY'), ('1:00 PER DAY', '1:00 PER DAY'), ('1:30 PER DAY', '1:30 PER DAY'), ('1:45 PER DAY', '1:45 PER DAY'), ('2:00 PER DAY', '2:00 PER DAY'), ('2:30 PER DAY', '2:30 PER DAY'), ('2:45 PER DAY', '2:45 PER DAY'), ('3:00 PER DAY', '3:00 PER DAY')], default='', max_length=15)),
                ('training_mode', models.CharField(choices=[('ONLINE', 'ONLINE'), ('IN PERSON', 'IN PERSON'), ('HYBRID', 'HYBRID')], default='', max_length=20)),
                ('requirements', models.CharField(choices=[('BACHELORS', 'BACHELORS')], default='', max_length=50)),
                ('description', models.TextField(max_length=500)),
                ('teacher_bio', models.TextField(default='', max_length=500)),
                ('monday', models.BooleanField(default=False)),
                ('tuesday', models.BooleanField(default=False)),
                ('wednesday', models.BooleanField(default=False)),
                ('thursday', models.BooleanField(default=False)),
                ('friday', models.BooleanField(default=False)),
                ('saturday', models.BooleanField(default=False)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('cost', models.FloatField()),
                ('currency', models.CharField(choices=[('AED (United Arab Emirates Dirham) - د.إ', 'AED (United Arab Emirates Dirham) - د.إ'), ('Algerian Dinar (DZD) - د.ج', 'Algerian Dinar (DZD) - د.ج'), ('Angolan Kwanza (AOA) - Kz', 'Angolan Kwanza (AOA) - Kz'), ('ARS (Argentine Peso) - $', 'ARS (Argentine Peso) - $'), ('AUD (Australian Dollar) - A$', 'AUD (Australian Dollar) - A$'), ('BDT (Bangladeshi Taka) - ৳', 'BDT (Bangladeshi Taka) - ৳'), ('Botswana Pula (BWP) - P', 'Botswana Pula (BWP) - P'), ('BRL (Brazilian Real) - R$', 'BRL (Brazilian Real) - R$'), ('Burundian Franc (BIF)', 'Burundian Franc (BIF)'), ('CAD (Canadian Dollar) - C$', 'CAD (Canadian Dollar) - C$'), ('Cape Verdean Escudo (CVE) - $ or Esc', 'Cape Verdean Escudo (CVE) - $ or Esc'), ('Central African CFA Franc (XAF) - FCFA', 'Central African CFA Franc (XAF) - FCFA'), ('CHF (Swiss Franc) - CHF', 'CHF (Swiss Franc) - CHF'), ('CLP (Chilean Peso) - $', 'CLP (Chilean Peso) - $'), ('CNY (Chinese Yuan Renminbi) - ¥ or 元', 'CNY (Chinese Yuan Renminbi) - ¥ or 元'), ('Comorian Franc (KMF)', 'Comorian Franc (KMF)'), ('Congolese Franc (CDF) - FC', 'Congolese Franc (CDF) - FC'), ('COP (Colombian Peso) - $', 'COP (Colombian Peso) - $'), ('CZK (Czech Koruna) - Kč', 'CZK (Czech Koruna) - Kč'), ('Djiboutian Franc (DJF)', 'Djiboutian Franc (DJF)'), ('DKK (Danish Krone) - kr', 'DKK (Danish Krone) - kr'), ('EGP (Egyptian Pound) - £ or ج.م', 'EGP (Egyptian Pound) - £ or ج.م'), ('Egyptian Pound (EGP) - £ or ج.م', 'Egyptian Pound (EGP) - £ or ج.م'), ('Eritrean Nakfa (ERN) - Nfk', 'Eritrean Nakfa (ERN) - Nfk'), ('Ethiopian Birr (ETB) - Br', 'Ethiopian Birr (ETB) - Br'), ('EUR (Euro) - €', 'EUR (Euro) - €'), ('Gambian Dalasi (GMD) - D', 'Gambian Dalasi (GMD) - D'), ('GBP (British Pound Sterling) - £', 'GBP (British Pound Sterling) - £'), ('Ghanaian Cedi (GHS) - GH₵', 'Ghanaian Cedi (GHS) - GH₵'), ('Guinean Franc (GNF) - GFr', 'Guinean Franc (GNF) - GFr'), ('HKD (Hong Kong Dollar) - HK$', 'HKD (Hong Kong Dollar) - HK$'), ('HUF (Hungarian Forint) - Ft', 'HUF (Hungarian Forint) - Ft'), ('IDR (Indonesian Rupiah) - Rp', 'IDR (Indonesian Rupiah) - Rp'), ('ILS (Israeli New Shekel) - ₪', 'ILS (Israeli New Shekel) - ₪'), ('INR (Indian Rupee) - ₹', 'INR (Indian Rupee) - ₹'), ('IQD (Iraqi Dinar) - ع.د', 'IQD (Iraqi Dinar) - ع.د'), ('JPY (Japanese Yen) - ¥', 'JPY (Japanese Yen) - ¥'), ('Kenyan Shilling (KES) - KSh', 'Kenyan Shilling (KES) - KSh'), ('KRW (South Korean Won) - ₩', 'KRW (South Korean Won) - ₩'), ('Lesotho Loti (LSL) - L', 'Lesotho Loti (LSL) - L'), ('Liberian Dollar (LRD) - $', 'Liberian Dollar (LRD) - $'), ('Libyan Dinar (LYD) - ل.د', 'Libyan Dinar (LYD) - ل.د'), ('Malagasy Ariary (MGA)', 'Malagasy Ariary (MGA)'), ('Malawian Kwacha (MWK) - MK', 'Malawian Kwacha (MWK) - MK'), ('Mauritanian Ouguiya (MRU) - UM', 'Mauritanian Ouguiya (MRU) - UM'), ('Mauritian Rupee (MUR) - ₨', 'Mauritian Rupee (MUR) - ₨'), ('Moroccan Dirham (MAD) - د.م.', 'Moroccan Dirham (MAD) - د.م.'), ('Mozambican Metical (MZN) - MT', 'Mozambican Metical (MZN) - MT'), ('MXN (Mexican Peso) - $', 'MXN (Mexican Peso) - $'), ('MYR (Malaysian Ringgit) - RM', 'MYR (Malaysian Ringgit) - RM'), ('Namibian Dollar (NAD) - $', 'Namibian Dollar (NAD) - $'), ('NGN (Nigerian Naira) - ₦', 'NGN (Nigerian Naira) - ₦'), ('NOK (Norwegian Krone) - kr', 'NOK (Norwegian Krone) - kr'), ('NZD (New Zealand Dollar) - NZ$', 'NZD (New Zealand Dollar) - NZ$'), ('PHP (Philippine Peso) - ₱', 'PHP (Philippine Peso) - ₱'), ('PKR (Pakistani Rupee) - ₨', 'PKR (Pakistani Rupee) - ₨'), ('PLN (Polish Zloty) - zł', 'PLN (Polish Zloty) - zł'), ('RON (Romanian Leu) - lei', 'RON (Romanian Leu) - lei'), ('RUB (Russian Ruble) - ₽', 'RUB (Russian Ruble) - ₽'), ('Rwandan Franc (RWF)', 'Rwandan Franc (RWF)'), ('São Tomé and Príncipe Dobra (STN) - Db', 'São Tomé and Príncipe Dobra (STN) - Db'), ('SAR (Saudi Riyal) - ﷼', 'SAR (Saudi Riyal) - ﷼'), ('SEK (Swedish Krona) - kr', 'SEK (Swedish Krona) - kr'), ('Seychellois Rupee (SCR) - ₨', 'Seychellois Rupee (SCR) - ₨'), ('SGD (Singapore Dollar) - S$', 'SGD (Singapore Dollar) - S$'), ('Sierra Leonean Leone (SLL) - Le', 'Sierra Leonean Leone (SLL) - Le'), ('Somali Shilling (SOS) - Sh.So.', 'Somali Shilling (SOS) - Sh.So.'), ('South African Rand (ZAR) - R', 'South African Rand (ZAR) - R'), ('South Sudanese Pound (SSP)', 'South Sudanese Pound (SSP)'), ('Sudanese Pound (SDG) - ج.س', 'Sudanese Pound (SDG) - ج.س'), ('Swazi Lilangeni (SZL) - L', 'Swazi Lilangeni (SZL) - L'), ('SYP (Syrian Pound) - £ or ل.س', 'SYP (Syrian Pound) - £ or ل.س'), ('Tanzanian Shilling (TZS) - Sh', 'Tanzanian Shilling (TZS) - Sh'), ('THB (Thai Baht) - ฿', 'THB (Thai Baht) - ฿'), ('TRY (Turkish Lira) - ₺', 'TRY (Turkish Lira) - ₺'), ('Tunisian Dinar (TND) - د.ت', 'Tunisian Dinar (TND) - د.ت'), ('TWD (New Taiwan Dollar) - NT$', 'TWD (New Taiwan Dollar) - NT$'), ('Ugandan Shilling (UGX) - USh', 'Ugandan Shilling (UGX) - USh'), ('USD (United States Dollar) - $', 'USD (United States Dollar) - $'), ('West African CFA Franc (XOF) - CFA', 'West African CFA Franc (XOF) - CFA'), ('Zambian Kwacha (ZMW) - ZK', 'Zambian Kwacha (ZMW) - ZK'), ('ZAR (South African Rand) - R', 'ZAR (South African Rand) - R'), ('Zimbabwean Dollar (ZWL) - $', 'Zimbabwean Dollar (ZWL) - $')], default='', max_length=50)),
                ('certification', models.BooleanField(default=False, verbose_name='Will this course deliver a certificate?')),
                ('active', models.BooleanField(default=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Training',
                'verbose_name_plural': 'Trainings',
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='TrainingApplication',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=50)),
                ('phone_code', models.CharField(choices=[('+1', '+1'), ('+7', '+7'), ('+20', '+20'), ('+27', '+27'), ('+30', '+30'), ('+31', '+31'), ('+32', '+32'), ('+33', '+33'), ('+34', '+34'), ('+36', '+36'), ('+39', '+39'), ('+40', '+40'), ('+41', '+41'), ('+43', '+43'), ('+44', '+44'), ('+45', '+45'), ('+46', '+46'), ('+47', '+47'), ('+48', '+48'), ('+49', '+49'), ('+51', '+51'), ('+52', '+52'), ('+53', '+53'), ('+54', '+54'), ('+55', '+55'), ('+56', '+56'), ('+57', '+57'), ('+58', '+58'), ('+60', '+60'), ('+61', '+61'), ('+62', '+62'), ('+63', '+63'), ('+64', '+64'), ('+64', '+64'), ('+65', '+65'), ('+66', '+66'), ('+81', '+81'), ('+82', '+82'), ('+84', '+84'), ('+86', '+86'), ('+90', '+90'), ('+91', '+91'), ('+92', '+92'), ('+93', '+93'), ('+94', '+94'), ('+95', '+95'), ('+98', '+98'), ('+211', '+211'), ('+212', '+212'), ('+212', '+212'), ('+213', '+213'), ('+216', '+216'), ('+218', '+218'), ('+220', '+220'), ('+221', '+221'), ('+222', '+222'), ('+223', '+223'), ('+224', '+224'), ('+225', '+225'), ('+226', '+226'), ('+227', '+227'), ('+228', '+228'), ('+229', '+229'), ('+230', '+230'), ('+231', '+231'), ('+232', '+232'), ('+233', '+233'), ('+234', '+234'), ('+235', '+235'), ('+236', '+236'), ('+237', '+237'), ('+238', '+238'), ('+239', '+239'), ('+240', '+240'), ('+241', '+241'), ('+242', '+242'), ('+243', '+243'), ('+244', '+244'), ('+245', '+245'), ('+246', '+246'), ('+248', '+248'), ('+249', '+249'), ('+250', '+250'), ('+251', '+251'), ('+252', '+252'), ('+253', '+253'), ('+254', '+254'), ('+255', '+255'), ('+256', '+256'), ('+257', '+257'), ('+258', '+258'), ('+260', '+260'), ('+261', '+261'), ('+262', '+262'), ('+262', '+262'), ('+263', '+263'), ('+264', '+264'), ('+265', '+265'), ('+266', '+266'), ('+267', '+267'), ('+268', '+268'), ('+269', '+269'), ('+290', '+290'), ('+291', '+291'), ('+297', '+297'), ('+298', '+298'), ('+299', '+299'), ('+350', '+350'), ('+351', '+351'), ('+352', '+352'), ('+353', '+353'), ('+354', '+354'), ('+355', '+355'), ('+356', '+356'), ('+357', '+357'), ('+358', '+358'), ('+359', '+359'), ('+370', '+370'), ('+371', '+371'), ('+372', '+372'), ('+373', '+373'), ('+374', '+374'), ('+375', '+375'), ('+376', '+376'), ('+377', '+377'), ('+378', '+378'), ('+379', '+379'), ('+380', '+380'), ('+381', '+381'), ('+382', '+382'), ('+383', '+383'), ('+385', '+385'), ('+386', '+386'), ('+387', '+387'), ('+389', '+389'), ('+420', '+420'), ('+421', '+421'), ('+423', '+423'), ('+500', '+500'), ('+501', '+501'), ('+502', '+502'), ('+503', '+503'), ('+504', '+504'), ('+505', '+505'), ('+506', '+506'), ('+507', '+507'), ('+508', '+508'), ('+509', '+509'), ('+590', '+590'), ('+590', '+590'), ('+591', '+591'), ('+592', '+592'), ('+593', '+593'), ('+595', '+595'), ('+597', '+597'), ('+598', '+598'), ('+599', '+599'), ('+599', '+599'), ('+670', '+670'), ('+672', '+672'), ('+673', '+673'), ('+674', '+674'), ('+675', '+675'), ('+676', '+676'), ('+677', '+677'), ('+678', '+678'), ('+679', '+679'), ('+680', '+680'), ('+681', '+681'), ('+682', '+682'), ('+683', '+683'), ('+685', '+685'), ('+686', '+686'), ('+687', '+687'), ('+688', '+688'), ('+689', '+689'), ('+690', '+690'), ('+691', '+691'), ('+692', '+692'), ('+850', '+850'), ('+852', '+852'), ('+853', '+853'), ('+855', '+855'), ('+856', '+856'), ('+880', '+880'), ('+886', '+886'), ('+960', '+960'), ('+961', '+961'), ('+962', '+962'), ('+963', '+963'), ('+964', '+964'), ('+965', '+965'), ('+966', '+966'), ('+967', '+967'), ('+968', '+968'), ('+970', '+970'), ('+971', '+971'), ('+972', '+972'), ('+973', '+973'), ('+974', '+974'), ('+975', '+975'), ('+976', '+976'), ('+977', '+977'), ('+992', '+992'), ('+993', '+993'), ('+994', '+994'), ('+995', '+995'), ('+996', '+996'), ('+998', '+998'), ('+1242', '+1242'), ('+1246', '+1246'), ('+1264', '+1264'), ('+1268', '+1268'), ('+1284', '+1284'), ('+1340', '+1340'), ('+1345', '+1345'), ('+1441', '+1441'), ('+1473', '+1473'), ('+1649', '+1649'), ('+1664', '+1664'), ('+1670', '+1670'), ('+1671', '+1671'), ('+1684', '+1684'), ('+1721', '+1721'), ('+1758', '+1758'), ('+1767', '+1767'), ('+1784', '+1784'), ('+1868', '+1868'), ('+1869', '+1869'), ('+1876', '+1876'), ('+4779', '+4779'), ('+441481', '+441481'), ('+441534', '+441534'), ('+441624', '+441624')], max_length=10)),
                ('phone_number', models.CharField(max_length=10)),
                ('company_name', models.CharField(default='', max_length=100)),
                ('position', models.CharField(choices=[('OFFICER', 'OFFICER'), ('ASSISTANT VICE PRESIDENT', 'ASSISTANT VICE PRESIDENT'), ('VICE PRESIDENT', 'VICE PRESIDENT'), ('OTHER', 'OTHER')], max_length=30)),
                ('resume', models.FileField(blank=True, null=True, upload_to='resumes/')),
                ('member', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('Applied', 'Applied'), ('Under Review', 'Under Review'), ('Rejected', 'Rejected'), ('Hired', 'Hired')], default='Applied', max_length=50)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('training', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.trainings')),
            ],
            options={
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='Testimonies',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('title', models.CharField(max_length=150)),
                ('user_pic', models.ImageField(default='blog_pics/person_icon 1.png', upload_to='document/')),
                ('testimony', tinymce.models.HTMLField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Testimony',
                'verbose_name_plural': 'Testimonies',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=5)),
                ('stripe_product_id', models.CharField(default='', max_length=50)),
                ('status', models.BooleanField(default=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sectors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, null=True)),
                ('description', models.TextField(max_length=500)),
                ('industry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sectors', to='core.industry')),
            ],
            options={
                'verbose_name': 'Sector',
                'verbose_name_plural': 'Sectors',
            },
        ),
        migrations.CreateModel(
            name='Rfi',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('slug', models.SlugField(max_length=120, unique=True)),
                ('message', models.TextField(max_length=5000)),
                ('client_email', models.EmailField(max_length=254)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('client_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rfi', to=settings.AUTH_USER_MODEL)),
                ('deal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.deals')),
            ],
            options={
                'verbose_name': 'Rfi',
                'verbose_name_plural': 'Rfi',
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('comment', models.TextField(max_length=768)),
                ('rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('blog', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='core.blog')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Review',
                'verbose_name_plural': 'Reviews',
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='ReplyToReview',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True)),
                ('comment', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('replier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='core.review')),
            ],
            options={
                'verbose_name': 'ReplyToReview',
                'verbose_name_plural': 'ReplyToReviews',
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('slug', models.SlugField(max_length=200)),
                ('project_name', models.CharField(max_length=100)),
                ('project_category', models.CharField(choices=[('Industrial', 'Industrial'), ('Fishing', 'Fishing'), ('Manufacturing', 'Manufacturing')], default='', max_length=50)),
                ('project_description', models.TextField()),
                ('estimated_cost', models.PositiveIntegerField(verbose_name='Estimated Cost in US $')),
                ('estimated_Annual_revenue', models.PositiveIntegerField(verbose_name='Estimated Annul Revenue in US $')),
                ('supporting_document', models.FileField(blank=True, null=True, upload_to='documents/')),
                ('reviewed', models.BooleanField(default=False)),
                ('reviewer_observations', models.TextField(blank=True, default='', null=True)),
                ('approved', models.BooleanField(default=False)),
                ('approver_observations', models.TextField(blank=True, default='', null=True)),
                ('final_decision', models.CharField(choices=[('APPROVED', 'APPROVED'), ('REJECTED', 'REJECTED')], default='', max_length=15)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approver', to=settings.AUTH_USER_MODEL)),
                ('company_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='core.enterprises')),
                ('project_initiator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owner', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewer', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='ProductRFI',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('slug', models.SlugField(max_length=120, unique=True)),
                ('message', models.TextField(max_length=5000)),
                ('client_email', models.EmailField(max_length=254)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('client_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_rfi', to=settings.AUTH_USER_MODEL)),
                ('product_deal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.productdeals')),
            ],
            options={
                'verbose_name': 'Product rfi',
                'verbose_name_plural': 'Product rfi',
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='ProductDealImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(default='deals/deals.jpeg', upload_to='deals/', verbose_name='Supporting Documents')),
                ('deal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.productdeals')),
            ],
        ),
        migrations.CreateModel(
            name='Jobs',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('slug', models.SlugField(unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('company_name', models.CharField(blank=True, max_length=50, null=True)),
                ('job_title', models.CharField(max_length=100)),
                ('job_grade', models.CharField(choices=[('CS', 'Cadre Superieur'), ('CM', 'Cadre Moyen')], max_length=2)),
                ('Salary', models.FloatField()),
                ('currency', models.CharField(choices=[('AED (United Arab Emirates Dirham) - د.إ', 'AED (United Arab Emirates Dirham) - د.إ'), ('Algerian Dinar (DZD) - د.ج', 'Algerian Dinar (DZD) - د.ج'), ('Angolan Kwanza (AOA) - Kz', 'Angolan Kwanza (AOA) - Kz'), ('ARS (Argentine Peso) - $', 'ARS (Argentine Peso) - $'), ('AUD (Australian Dollar) - A$', 'AUD (Australian Dollar) - A$'), ('BDT (Bangladeshi Taka) - ৳', 'BDT (Bangladeshi Taka) - ৳'), ('Botswana Pula (BWP) - P', 'Botswana Pula (BWP) - P'), ('BRL (Brazilian Real) - R$', 'BRL (Brazilian Real) - R$'), ('Burundian Franc (BIF)', 'Burundian Franc (BIF)'), ('CAD (Canadian Dollar) - C$', 'CAD (Canadian Dollar) - C$'), ('Cape Verdean Escudo (CVE) - $ or Esc', 'Cape Verdean Escudo (CVE) - $ or Esc'), ('Central African CFA Franc (XAF) - FCFA', 'Central African CFA Franc (XAF) - FCFA'), ('CHF (Swiss Franc) - CHF', 'CHF (Swiss Franc) - CHF'), ('CLP (Chilean Peso) - $', 'CLP (Chilean Peso) - $'), ('CNY (Chinese Yuan Renminbi) - ¥ or 元', 'CNY (Chinese Yuan Renminbi) - ¥ or 元'), ('Comorian Franc (KMF)', 'Comorian Franc (KMF)'), ('Congolese Franc (CDF) - FC', 'Congolese Franc (CDF) - FC'), ('COP (Colombian Peso) - $', 'COP (Colombian Peso) - $'), ('CZK (Czech Koruna) - Kč', 'CZK (Czech Koruna) - Kč'), ('Djiboutian Franc (DJF)', 'Djiboutian Franc (DJF)'), ('DKK (Danish Krone) - kr', 'DKK (Danish Krone) - kr'), ('EGP (Egyptian Pound) - £ or ج.م', 'EGP (Egyptian Pound) - £ or ج.م'), ('Egyptian Pound (EGP) - £ or ج.م', 'Egyptian Pound (EGP) - £ or ج.م'), ('Eritrean Nakfa (ERN) - Nfk', 'Eritrean Nakfa (ERN) - Nfk'), ('Ethiopian Birr (ETB) - Br', 'Ethiopian Birr (ETB) - Br'), ('EUR (Euro) - €', 'EUR (Euro) - €'), ('Gambian Dalasi (GMD) - D', 'Gambian Dalasi (GMD) - D'), ('GBP (British Pound Sterling) - £', 'GBP (British Pound Sterling) - £'), ('Ghanaian Cedi (GHS) - GH₵', 'Ghanaian Cedi (GHS) - GH₵'), ('Guinean Franc (GNF) - GFr', 'Guinean Franc (GNF) - GFr'), ('HKD (Hong Kong Dollar) - HK$', 'HKD (Hong Kong Dollar) - HK$'), ('HUF (Hungarian Forint) - Ft', 'HUF (Hungarian Forint) - Ft'), ('IDR (Indonesian Rupiah) - Rp', 'IDR (Indonesian Rupiah) - Rp'), ('ILS (Israeli New Shekel) - ₪', 'ILS (Israeli New Shekel) - ₪'), ('INR (Indian Rupee) - ₹', 'INR (Indian Rupee) - ₹'), ('IQD (Iraqi Dinar) - ع.د', 'IQD (Iraqi Dinar) - ع.د'), ('JPY (Japanese Yen) - ¥', 'JPY (Japanese Yen) - ¥'), ('Kenyan Shilling (KES) - KSh', 'Kenyan Shilling (KES) - KSh'), ('KRW (South Korean Won) - ₩', 'KRW (South Korean Won) - ₩'), ('Lesotho Loti (LSL) - L', 'Lesotho Loti (LSL) - L'), ('Liberian Dollar (LRD) - $', 'Liberian Dollar (LRD) - $'), ('Libyan Dinar (LYD) - ل.د', 'Libyan Dinar (LYD) - ل.د'), ('Malagasy Ariary (MGA)', 'Malagasy Ariary (MGA)'), ('Malawian Kwacha (MWK) - MK', 'Malawian Kwacha (MWK) - MK'), ('Mauritanian Ouguiya (MRU) - UM', 'Mauritanian Ouguiya (MRU) - UM'), ('Mauritian Rupee (MUR) - ₨', 'Mauritian Rupee (MUR) - ₨'), ('Moroccan Dirham (MAD) - د.م.', 'Moroccan Dirham (MAD) - د.م.'), ('Mozambican Metical (MZN) - MT', 'Mozambican Metical (MZN) - MT'), ('MXN (Mexican Peso) - $', 'MXN (Mexican Peso) - $'), ('MYR (Malaysian Ringgit) - RM', 'MYR (Malaysian Ringgit) - RM'), ('Namibian Dollar (NAD) - $', 'Namibian Dollar (NAD) - $'), ('NGN (Nigerian Naira) - ₦', 'NGN (Nigerian Naira) - ₦'), ('NOK (Norwegian Krone) - kr', 'NOK (Norwegian Krone) - kr'), ('NZD (New Zealand Dollar) - NZ$', 'NZD (New Zealand Dollar) - NZ$'), ('PHP (Philippine Peso) - ₱', 'PHP (Philippine Peso) - ₱'), ('PKR (Pakistani Rupee) - ₨', 'PKR (Pakistani Rupee) - ₨'), ('PLN (Polish Zloty) - zł', 'PLN (Polish Zloty) - zł'), ('RON (Romanian Leu) - lei', 'RON (Romanian Leu) - lei'), ('RUB (Russian Ruble) - ₽', 'RUB (Russian Ruble) - ₽'), ('Rwandan Franc (RWF)', 'Rwandan Franc (RWF)'), ('São Tomé and Príncipe Dobra (STN) - Db', 'São Tomé and Príncipe Dobra (STN) - Db'), ('SAR (Saudi Riyal) - ﷼', 'SAR (Saudi Riyal) - ﷼'), ('SEK (Swedish Krona) - kr', 'SEK (Swedish Krona) - kr'), ('Seychellois Rupee (SCR) - ₨', 'Seychellois Rupee (SCR) - ₨'), ('SGD (Singapore Dollar) - S$', 'SGD (Singapore Dollar) - S$'), ('Sierra Leonean Leone (SLL) - Le', 'Sierra Leonean Leone (SLL) - Le'), ('Somali Shilling (SOS) - Sh.So.', 'Somali Shilling (SOS) - Sh.So.'), ('South African Rand (ZAR) - R', 'South African Rand (ZAR) - R'), ('South Sudanese Pound (SSP)', 'South Sudanese Pound (SSP)'), ('Sudanese Pound (SDG) - ج.س', 'Sudanese Pound (SDG) - ج.س'), ('Swazi Lilangeni (SZL) - L', 'Swazi Lilangeni (SZL) - L'), ('SYP (Syrian Pound) - £ or ل.س', 'SYP (Syrian Pound) - £ or ل.س'), ('Tanzanian Shilling (TZS) - Sh', 'Tanzanian Shilling (TZS) - Sh'), ('THB (Thai Baht) - ฿', 'THB (Thai Baht) - ฿'), ('TRY (Turkish Lira) - ₺', 'TRY (Turkish Lira) - ₺'), ('Tunisian Dinar (TND) - د.ت', 'Tunisian Dinar (TND) - د.ت'), ('TWD (New Taiwan Dollar) - NT$', 'TWD (New Taiwan Dollar) - NT$'), ('Ugandan Shilling (UGX) - USh', 'Ugandan Shilling (UGX) - USh'), ('USD (United States Dollar) - $', 'USD (United States Dollar) - $'), ('West African CFA Franc (XOF) - CFA', 'West African CFA Franc (XOF) - CFA'), ('Zambian Kwacha (ZMW) - ZK', 'Zambian Kwacha (ZMW) - ZK'), ('ZAR (South African Rand) - R', 'ZAR (South African Rand) - R'), ('Zimbabwean Dollar (ZWL) - $', 'Zimbabwean Dollar (ZWL) - $')], default='', max_length=50)),
                ('Department', models.CharField(choices=[('ACC', 'Accounting'), ('FNS', 'Financial Services')], max_length=3)),
                ('job_type', models.CharField(choices=[('FT', 'Full Time'), ('PT', 'Part Time'), ('IN', 'Intern')], max_length=2)),
                ('country', models.CharField(choices=[('GB', 'United Kingdom'), ('AF', 'Afghanistan'), ('AX', 'Aland Islands'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AS', 'American Samoa'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AQ', 'Antarctica'), ('AG', 'Antigua and Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BT', 'Bhutan'), ('BO', 'Bolivia'), ('BA', 'Bosnia and Herzegovina'), ('BW', 'Botswana'), ('BV', 'Bouvet Island'), ('BR', 'Brazil'), ('IO', 'British Indian Ocean Territory'), ('BN', 'Brunei Darussalam'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('CV', 'Cape Verde'), ('KY', 'Cayman Islands'), ('CF', 'Central African Republic'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CX', 'Christmas Island'), ('CC', 'Cocos (Keeling) Islands'), ('CO', 'Colombia'), ('KM', 'Comoros'), ('CG', 'Congo'), ('CD', 'Congo, The Democratic Republic of the'), ('CK', 'Cook Islands'), ('CR', 'Costa Rica'), ('CI', "Cote d'Ivoire"), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CY', 'Cyprus'), ('CZ', 'Czech Republic'), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DO', 'Dominican Republic'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('ET', 'Ethiopia'), ('FK', 'Falkland Islands (Malvinas)'), ('FO', 'Faroe Islands'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('GF', 'French Guiana'), ('PF', 'French Polynesia'), ('TF', 'French Southern Territories'), ('GA', 'Gabon'), ('GM', 'Gambia'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GR', 'Greece'), ('GL', 'Greenland'), ('GD', 'Grenada'), ('GP', 'Guadeloupe'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GG', 'Guernsey'), ('GN', 'Guinea'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('HM', 'Heard Island and McDonald Islands'), ('VA', 'Holy See (Vatican City State)'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Iran, Islamic Republic of'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IM', 'Isle of Man'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JE', 'Jersey'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KP', "Korea, Democratic People's Republic of"), ('KR', 'Korea, Republic of'), ('KW', 'Kuwait'), ('KG', 'Kyrgyzstan'), ('LA', "Lao People's Democratic Republic"), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libyan Arab Jamahiriya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MO', 'Macao'), ('MK', 'Macedonia, The Former Yugoslav Republic of'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('MH', 'Marshall Islands'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('YT', 'Mayotte'), ('MX', 'Mexico'), ('FM', 'Micronesia, Federated States of'), ('MD', 'Moldova'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('ME', 'Montenegro'), ('MS', 'Montserrat'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands'), ('AN', 'Netherlands Antilles'), ('NC', 'New Caledonia'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'Norfolk Island'), ('MP', 'Northern Mariana Islands'), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PS', 'Palestinian Territory, Occupied'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippines'), ('PN', 'Pitcairn'), ('PL', 'Poland'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('RE', 'Reunion'), ('RO', 'Romania'), ('RU', 'Russian Federation'), ('RW', 'Rwanda'), ('BL', 'Saint Barthelemy'), ('SH', 'Saint Helena'), ('KN', 'Saint Kitts and Nevis'), ('LC', 'Saint Lucia'), ('MF', 'Saint Martin'), ('PM', 'Saint Pierre and Miquelon'), ('VC', 'Saint Vincent and the Grenadines'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'Sao Tome and Principe'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('RS', 'Serbia'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('GS', 'South Georgia and the South Sandwich Islands'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SD', 'Sudan'), ('SR', 'Suriname'), ('SJ', 'Svalbard and Jan Mayen'), ('SZ', 'Swaziland'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syrian Arab Republic'), ('TW', 'Taiwan, Province of China'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania, United Republic of'), ('TH', 'Thailand'), ('TL', 'Timor-Leste'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Turkey'), ('TM', 'Turkmenistan'), ('TC', 'Turks and Caicos Islands'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates'), ('US', 'United States'), ('UM', 'United States Minor Outlying Islands'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VE', 'Venezuela'), ('VN', 'Viet Nam'), ('VG', 'Virgin Islands, British'), ('VI', 'Virgin Islands, U.S.'), ('WF', 'Wallis and Futuna'), ('EH', 'Western Sahara'), ('YE', 'Yemen'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')], max_length=2)),
                ('city', models.CharField(max_length=50)),
                ('summary', models.TextField(max_length=500)),
                ('job_description', models.TextField(max_length=1000)),
                ('job_qualifications', models.TextField(max_length=1000)),
                ('travel_required', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('job_contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Job',
                'verbose_name_plural': 'Jobs',
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='JobApplication',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('email', models.EmailField(max_length=50)),
                ('resume', models.FileField(upload_to='resumes/')),
                ('cover_letter', models.TextField()),
                ('status', models.CharField(choices=[('Applied', 'Applied'), ('Under Review', 'Under Review'), ('Rejected', 'Rejected'), ('Hired', 'Hired')], default='Applied', max_length=50)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.jobs')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='Forum',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('slug', models.SlugField(max_length=200)),
                ('creator_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('topic', models.CharField(max_length=300)),
                ('description', models.TextField(blank=True, max_length=1000)),
                ('link', models.CharField(max_length=100, null=True)),
                ('active', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.category')),
                ('forum_creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'forum',
                'verbose_name_plural': 'forums',
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='ExpertProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('first_name', models.CharField(default='', max_length=100)),
                ('last_name', models.CharField(default='', max_length=100)),
                ('DOB', models.DateField(blank=True, null=True, verbose_name='Enter Your Date of Birth')),
                ('company_name', models.CharField(blank=True, max_length=50, null=True)),
                ('avatar', models.ImageField(default='document/person_icon_1.png', upload_to='document/')),
                ('street_address', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('city', models.CharField(default='', max_length=66)),
                ('state', models.CharField(blank=True, default='', max_length=2, null=True)),
                ('country', models.CharField(choices=[('GB', 'United Kingdom'), ('AF', 'Afghanistan'), ('AX', 'Aland Islands'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AS', 'American Samoa'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AQ', 'Antarctica'), ('AG', 'Antigua and Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BT', 'Bhutan'), ('BO', 'Bolivia'), ('BA', 'Bosnia and Herzegovina'), ('BW', 'Botswana'), ('BV', 'Bouvet Island'), ('BR', 'Brazil'), ('IO', 'British Indian Ocean Territory'), ('BN', 'Brunei Darussalam'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('CV', 'Cape Verde'), ('KY', 'Cayman Islands'), ('CF', 'Central African Republic'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CX', 'Christmas Island'), ('CC', 'Cocos (Keeling) Islands'), ('CO', 'Colombia'), ('KM', 'Comoros'), ('CG', 'Congo'), ('CD', 'Congo, The Democratic Republic of the'), ('CK', 'Cook Islands'), ('CR', 'Costa Rica'), ('CI', "Cote d'Ivoire"), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CY', 'Cyprus'), ('CZ', 'Czech Republic'), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DO', 'Dominican Republic'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('ET', 'Ethiopia'), ('FK', 'Falkland Islands (Malvinas)'), ('FO', 'Faroe Islands'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('GF', 'French Guiana'), ('PF', 'French Polynesia'), ('TF', 'French Southern Territories'), ('GA', 'Gabon'), ('GM', 'Gambia'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GR', 'Greece'), ('GL', 'Greenland'), ('GD', 'Grenada'), ('GP', 'Guadeloupe'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GG', 'Guernsey'), ('GN', 'Guinea'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('HM', 'Heard Island and McDonald Islands'), ('VA', 'Holy See (Vatican City State)'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Iran, Islamic Republic of'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IM', 'Isle of Man'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JE', 'Jersey'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KP', "Korea, Democratic People's Republic of"), ('KR', 'Korea, Republic of'), ('KW', 'Kuwait'), ('KG', 'Kyrgyzstan'), ('LA', "Lao People's Democratic Republic"), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libyan Arab Jamahiriya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MO', 'Macao'), ('MK', 'Macedonia, The Former Yugoslav Republic of'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('MH', 'Marshall Islands'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('YT', 'Mayotte'), ('MX', 'Mexico'), ('FM', 'Micronesia, Federated States of'), ('MD', 'Moldova'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('ME', 'Montenegro'), ('MS', 'Montserrat'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands'), ('AN', 'Netherlands Antilles'), ('NC', 'New Caledonia'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'Norfolk Island'), ('MP', 'Northern Mariana Islands'), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PS', 'Palestinian Territory, Occupied'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippines'), ('PN', 'Pitcairn'), ('PL', 'Poland'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('RE', 'Reunion'), ('RO', 'Romania'), ('RU', 'Russian Federation'), ('RW', 'Rwanda'), ('BL', 'Saint Barthelemy'), ('SH', 'Saint Helena'), ('KN', 'Saint Kitts and Nevis'), ('LC', 'Saint Lucia'), ('MF', 'Saint Martin'), ('PM', 'Saint Pierre and Miquelon'), ('VC', 'Saint Vincent and the Grenadines'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'Sao Tome and Principe'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('RS', 'Serbia'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('GS', 'South Georgia and the South Sandwich Islands'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SD', 'Sudan'), ('SR', 'Suriname'), ('SJ', 'Svalbard and Jan Mayen'), ('SZ', 'Swaziland'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syrian Arab Republic'), ('TW', 'Taiwan, Province of China'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania, United Republic of'), ('TH', 'Thailand'), ('TL', 'Timor-Leste'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Turkey'), ('TM', 'Turkmenistan'), ('TC', 'Turks and Caicos Islands'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates'), ('US', 'United States'), ('UM', 'United States Minor Outlying Islands'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VE', 'Venezuela'), ('VN', 'Viet Nam'), ('VG', 'Virgin Islands, British'), ('VI', 'Virgin Islands, U.S.'), ('WF', 'Wallis and Futuna'), ('EH', 'Western Sahara'), ('YE', 'Yemen'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')], default='', max_length=2)),
                ('phone_code', models.CharField(choices=[('+1', '+1'), ('+7', '+7'), ('+20', '+20'), ('+27', '+27'), ('+30', '+30'), ('+31', '+31'), ('+32', '+32'), ('+33', '+33'), ('+34', '+34'), ('+36', '+36'), ('+39', '+39'), ('+40', '+40'), ('+41', '+41'), ('+43', '+43'), ('+44', '+44'), ('+45', '+45'), ('+46', '+46'), ('+47', '+47'), ('+48', '+48'), ('+49', '+49'), ('+51', '+51'), ('+52', '+52'), ('+53', '+53'), ('+54', '+54'), ('+55', '+55'), ('+56', '+56'), ('+57', '+57'), ('+58', '+58'), ('+60', '+60'), ('+61', '+61'), ('+62', '+62'), ('+63', '+63'), ('+64', '+64'), ('+64', '+64'), ('+65', '+65'), ('+66', '+66'), ('+81', '+81'), ('+82', '+82'), ('+84', '+84'), ('+86', '+86'), ('+90', '+90'), ('+91', '+91'), ('+92', '+92'), ('+93', '+93'), ('+94', '+94'), ('+95', '+95'), ('+98', '+98'), ('+211', '+211'), ('+212', '+212'), ('+212', '+212'), ('+213', '+213'), ('+216', '+216'), ('+218', '+218'), ('+220', '+220'), ('+221', '+221'), ('+222', '+222'), ('+223', '+223'), ('+224', '+224'), ('+225', '+225'), ('+226', '+226'), ('+227', '+227'), ('+228', '+228'), ('+229', '+229'), ('+230', '+230'), ('+231', '+231'), ('+232', '+232'), ('+233', '+233'), ('+234', '+234'), ('+235', '+235'), ('+236', '+236'), ('+237', '+237'), ('+238', '+238'), ('+239', '+239'), ('+240', '+240'), ('+241', '+241'), ('+242', '+242'), ('+243', '+243'), ('+244', '+244'), ('+245', '+245'), ('+246', '+246'), ('+248', '+248'), ('+249', '+249'), ('+250', '+250'), ('+251', '+251'), ('+252', '+252'), ('+253', '+253'), ('+254', '+254'), ('+255', '+255'), ('+256', '+256'), ('+257', '+257'), ('+258', '+258'), ('+260', '+260'), ('+261', '+261'), ('+262', '+262'), ('+262', '+262'), ('+263', '+263'), ('+264', '+264'), ('+265', '+265'), ('+266', '+266'), ('+267', '+267'), ('+268', '+268'), ('+269', '+269'), ('+290', '+290'), ('+291', '+291'), ('+297', '+297'), ('+298', '+298'), ('+299', '+299'), ('+350', '+350'), ('+351', '+351'), ('+352', '+352'), ('+353', '+353'), ('+354', '+354'), ('+355', '+355'), ('+356', '+356'), ('+357', '+357'), ('+358', '+358'), ('+359', '+359'), ('+370', '+370'), ('+371', '+371'), ('+372', '+372'), ('+373', '+373'), ('+374', '+374'), ('+375', '+375'), ('+376', '+376'), ('+377', '+377'), ('+378', '+378'), ('+379', '+379'), ('+380', '+380'), ('+381', '+381'), ('+382', '+382'), ('+383', '+383'), ('+385', '+385'), ('+386', '+386'), ('+387', '+387'), ('+389', '+389'), ('+420', '+420'), ('+421', '+421'), ('+423', '+423'), ('+500', '+500'), ('+501', '+501'), ('+502', '+502'), ('+503', '+503'), ('+504', '+504'), ('+505', '+505'), ('+506', '+506'), ('+507', '+507'), ('+508', '+508'), ('+509', '+509'), ('+590', '+590'), ('+590', '+590'), ('+591', '+591'), ('+592', '+592'), ('+593', '+593'), ('+595', '+595'), ('+597', '+597'), ('+598', '+598'), ('+599', '+599'), ('+599', '+599'), ('+670', '+670'), ('+672', '+672'), ('+673', '+673'), ('+674', '+674'), ('+675', '+675'), ('+676', '+676'), ('+677', '+677'), ('+678', '+678'), ('+679', '+679'), ('+680', '+680'), ('+681', '+681'), ('+682', '+682'), ('+683', '+683'), ('+685', '+685'), ('+686', '+686'), ('+687', '+687'), ('+688', '+688'), ('+689', '+689'), ('+690', '+690'), ('+691', '+691'), ('+692', '+692'), ('+850', '+850'), ('+852', '+852'), ('+853', '+853'), ('+855', '+855'), ('+856', '+856'), ('+880', '+880'), ('+886', '+886'), ('+960', '+960'), ('+961', '+961'), ('+962', '+962'), ('+963', '+963'), ('+964', '+964'), ('+965', '+965'), ('+966', '+966'), ('+967', '+967'), ('+968', '+968'), ('+970', '+970'), ('+971', '+971'), ('+972', '+972'), ('+973', '+973'), ('+974', '+974'), ('+975', '+975'), ('+976', '+976'), ('+977', '+977'), ('+992', '+992'), ('+993', '+993'), ('+994', '+994'), ('+995', '+995'), ('+996', '+996'), ('+998', '+998'), ('+1242', '+1242'), ('+1246', '+1246'), ('+1264', '+1264'), ('+1268', '+1268'), ('+1284', '+1284'), ('+1340', '+1340'), ('+1345', '+1345'), ('+1441', '+1441'), ('+1473', '+1473'), ('+1649', '+1649'), ('+1664', '+1664'), ('+1670', '+1670'), ('+1671', '+1671'), ('+1684', '+1684'), ('+1721', '+1721'), ('+1758', '+1758'), ('+1767', '+1767'), ('+1784', '+1784'), ('+1868', '+1868'), ('+1869', '+1869'), ('+1876', '+1876'), ('+4779', '+4779'), ('+441481', '+441481'), ('+441534', '+441534'), ('+441624', '+441624')], default='', max_length=10)),
                ('phone_number', models.CharField(default='', max_length=10)),
                ('email', models.EmailField(max_length=254)),
                ('sex', models.CharField(choices=[('F', 'Female'), ('M', 'Male')], max_length=1)),
                ('is_expert', models.BooleanField(default=True, verbose_name='Is Expert')),
                ('commercial', models.BooleanField(default=False, verbose_name='Would like to be a commercial partner')),
                ('technical', models.BooleanField(default=False, verbose_name='Would like to be a technical partner')),
                ('financial', models.BooleanField(default=False, verbose_name='Would like to be a financial partner')),
                ('management', models.BooleanField(default=False, verbose_name='Would like to be a management partner')),
                ('bio', models.TextField(max_length=1000)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Expert Profile',
                'verbose_name_plural': 'Expert Profiles',
            },
        ),
        migrations.CreateModel(
            name='ExpertPortfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_title', models.CharField(max_length=200)),
                ('project_type', models.CharField(default='', max_length=200)),
                ('project_city', models.CharField(default='', max_length=100)),
                ('project_country', models.CharField(choices=[('GB', 'United Kingdom'), ('AF', 'Afghanistan'), ('AX', 'Aland Islands'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AS', 'American Samoa'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AQ', 'Antarctica'), ('AG', 'Antigua and Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BT', 'Bhutan'), ('BO', 'Bolivia'), ('BA', 'Bosnia and Herzegovina'), ('BW', 'Botswana'), ('BV', 'Bouvet Island'), ('BR', 'Brazil'), ('IO', 'British Indian Ocean Territory'), ('BN', 'Brunei Darussalam'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('CV', 'Cape Verde'), ('KY', 'Cayman Islands'), ('CF', 'Central African Republic'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CX', 'Christmas Island'), ('CC', 'Cocos (Keeling) Islands'), ('CO', 'Colombia'), ('KM', 'Comoros'), ('CG', 'Congo'), ('CD', 'Congo, The Democratic Republic of the'), ('CK', 'Cook Islands'), ('CR', 'Costa Rica'), ('CI', "Cote d'Ivoire"), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CY', 'Cyprus'), ('CZ', 'Czech Republic'), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DO', 'Dominican Republic'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('ET', 'Ethiopia'), ('FK', 'Falkland Islands (Malvinas)'), ('FO', 'Faroe Islands'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('GF', 'French Guiana'), ('PF', 'French Polynesia'), ('TF', 'French Southern Territories'), ('GA', 'Gabon'), ('GM', 'Gambia'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GR', 'Greece'), ('GL', 'Greenland'), ('GD', 'Grenada'), ('GP', 'Guadeloupe'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GG', 'Guernsey'), ('GN', 'Guinea'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('HM', 'Heard Island and McDonald Islands'), ('VA', 'Holy See (Vatican City State)'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Iran, Islamic Republic of'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IM', 'Isle of Man'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JE', 'Jersey'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KP', "Korea, Democratic People's Republic of"), ('KR', 'Korea, Republic of'), ('KW', 'Kuwait'), ('KG', 'Kyrgyzstan'), ('LA', "Lao People's Democratic Republic"), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libyan Arab Jamahiriya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MO', 'Macao'), ('MK', 'Macedonia, The Former Yugoslav Republic of'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('MH', 'Marshall Islands'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('YT', 'Mayotte'), ('MX', 'Mexico'), ('FM', 'Micronesia, Federated States of'), ('MD', 'Moldova'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('ME', 'Montenegro'), ('MS', 'Montserrat'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands'), ('AN', 'Netherlands Antilles'), ('NC', 'New Caledonia'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'Norfolk Island'), ('MP', 'Northern Mariana Islands'), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PS', 'Palestinian Territory, Occupied'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippines'), ('PN', 'Pitcairn'), ('PL', 'Poland'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('RE', 'Reunion'), ('RO', 'Romania'), ('RU', 'Russian Federation'), ('RW', 'Rwanda'), ('BL', 'Saint Barthelemy'), ('SH', 'Saint Helena'), ('KN', 'Saint Kitts and Nevis'), ('LC', 'Saint Lucia'), ('MF', 'Saint Martin'), ('PM', 'Saint Pierre and Miquelon'), ('VC', 'Saint Vincent and the Grenadines'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'Sao Tome and Principe'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('RS', 'Serbia'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('GS', 'South Georgia and the South Sandwich Islands'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SD', 'Sudan'), ('SR', 'Suriname'), ('SJ', 'Svalbard and Jan Mayen'), ('SZ', 'Swaziland'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syrian Arab Republic'), ('TW', 'Taiwan, Province of China'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania, United Republic of'), ('TH', 'Thailand'), ('TL', 'Timor-Leste'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Turkey'), ('TM', 'Turkmenistan'), ('TC', 'Turks and Caicos Islands'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates'), ('US', 'United States'), ('UM', 'United States Minor Outlying Islands'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VE', 'Venezuela'), ('VN', 'Viet Nam'), ('VG', 'Virgin Islands, British'), ('VI', 'Virgin Islands, U.S.'), ('WF', 'Wallis and Futuna'), ('EH', 'Western Sahara'), ('YE', 'Yemen'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')], default='', max_length=50)),
                ('description', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('client_name', models.CharField(max_length=200)),
                ('reference_email', models.EmailField(max_length=254)),
                ('technologies_used', models.CharField(max_length=300)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('consultant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Expert portfolio',
                'verbose_name_plural': 'Expert portfolios',
                'ordering': ('-start_date',),
            },
        ),
        migrations.CreateModel(
            name='ExpertMessaging',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('sender_email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=250)),
                ('content', models.TextField()),
                ('attached_file', models.FileField(blank=True, null=True, upload_to='')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('expert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_receiver', to='core.expertprofile')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_sender', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Messages',
                'ordering': ('-created_on',),
            },
        ),
        migrations.AddField(
            model_name='enterprises',
            name='industry',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.industry'),
        ),
        migrations.AddField(
            model_name='enterprises',
            name='sector',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.sectors'),
        ),
        migrations.AddField(
            model_name='enterprises',
            name='user',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='EmployeeProfile',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('slug', models.SlugField(unique=True)),
                ('first_name', models.CharField(default='', max_length=100)),
                ('last_name', models.CharField(default='', max_length=100)),
                ('DOB', models.DateField(blank=True, null=True)),
                ('prof_pic', models.ImageField(default='blog_pics/person_icon 1.png', upload_to='employee_pictures/')),
                ('street_number', models.CharField(default='', max_length=5)),
                ('city', models.CharField(default='', max_length=66)),
                ('state', models.CharField(default='', max_length=2)),
                ('country', models.CharField(choices=[('GB', 'United Kingdom'), ('AF', 'Afghanistan'), ('AX', 'Aland Islands'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AS', 'American Samoa'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AQ', 'Antarctica'), ('AG', 'Antigua and Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BT', 'Bhutan'), ('BO', 'Bolivia'), ('BA', 'Bosnia and Herzegovina'), ('BW', 'Botswana'), ('BV', 'Bouvet Island'), ('BR', 'Brazil'), ('IO', 'British Indian Ocean Territory'), ('BN', 'Brunei Darussalam'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('CV', 'Cape Verde'), ('KY', 'Cayman Islands'), ('CF', 'Central African Republic'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CX', 'Christmas Island'), ('CC', 'Cocos (Keeling) Islands'), ('CO', 'Colombia'), ('KM', 'Comoros'), ('CG', 'Congo'), ('CD', 'Congo, The Democratic Republic of the'), ('CK', 'Cook Islands'), ('CR', 'Costa Rica'), ('CI', "Cote d'Ivoire"), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CY', 'Cyprus'), ('CZ', 'Czech Republic'), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DO', 'Dominican Republic'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('ET', 'Ethiopia'), ('FK', 'Falkland Islands (Malvinas)'), ('FO', 'Faroe Islands'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('GF', 'French Guiana'), ('PF', 'French Polynesia'), ('TF', 'French Southern Territories'), ('GA', 'Gabon'), ('GM', 'Gambia'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GR', 'Greece'), ('GL', 'Greenland'), ('GD', 'Grenada'), ('GP', 'Guadeloupe'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GG', 'Guernsey'), ('GN', 'Guinea'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('HM', 'Heard Island and McDonald Islands'), ('VA', 'Holy See (Vatican City State)'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Iran, Islamic Republic of'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IM', 'Isle of Man'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JE', 'Jersey'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KP', "Korea, Democratic People's Republic of"), ('KR', 'Korea, Republic of'), ('KW', 'Kuwait'), ('KG', 'Kyrgyzstan'), ('LA', "Lao People's Democratic Republic"), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libyan Arab Jamahiriya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MO', 'Macao'), ('MK', 'Macedonia, The Former Yugoslav Republic of'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('MH', 'Marshall Islands'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('YT', 'Mayotte'), ('MX', 'Mexico'), ('FM', 'Micronesia, Federated States of'), ('MD', 'Moldova'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('ME', 'Montenegro'), ('MS', 'Montserrat'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands'), ('AN', 'Netherlands Antilles'), ('NC', 'New Caledonia'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'Norfolk Island'), ('MP', 'Northern Mariana Islands'), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PS', 'Palestinian Territory, Occupied'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippines'), ('PN', 'Pitcairn'), ('PL', 'Poland'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('RE', 'Reunion'), ('RO', 'Romania'), ('RU', 'Russian Federation'), ('RW', 'Rwanda'), ('BL', 'Saint Barthelemy'), ('SH', 'Saint Helena'), ('KN', 'Saint Kitts and Nevis'), ('LC', 'Saint Lucia'), ('MF', 'Saint Martin'), ('PM', 'Saint Pierre and Miquelon'), ('VC', 'Saint Vincent and the Grenadines'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'Sao Tome and Principe'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('RS', 'Serbia'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('GS', 'South Georgia and the South Sandwich Islands'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SD', 'Sudan'), ('SR', 'Suriname'), ('SJ', 'Svalbard and Jan Mayen'), ('SZ', 'Swaziland'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syrian Arab Republic'), ('TW', 'Taiwan, Province of China'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania, United Republic of'), ('TH', 'Thailand'), ('TL', 'Timor-Leste'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Turkey'), ('TM', 'Turkmenistan'), ('TC', 'Turks and Caicos Islands'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates'), ('US', 'United States'), ('UM', 'United States Minor Outlying Islands'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VE', 'Venezuela'), ('VN', 'Viet Nam'), ('VG', 'Virgin Islands, British'), ('VI', 'Virgin Islands, U.S.'), ('WF', 'Wallis and Futuna'), ('EH', 'Western Sahara'), ('YE', 'Yemen'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')], default='', max_length=2)),
                ('department', models.CharField(choices=[('F', 'Finance'), ('S', 'Sales'), ('CC', 'Contact Center'), ('ACC', 'Accounting'), ('IT', 'Information Technology'), ('RM', 'Risk Management')], default='', max_length=50)),
                ('emp_title', models.CharField(choices=[('OF', 'OFFICER'), ('MG', 'MANAGER'), ('SP', 'SUPERVISOR'), ('SG', 'SENIOR MG'), ('DT', 'DIRECTOR'), ('MD', 'MANAGING DIRECTOR'), ('CEO', 'CHIEF EXECUTIVE OFFICER')], default='', max_length=3)),
                ('phone_code', models.CharField(choices=[('+1', '+1'), ('+7', '+7'), ('+20', '+20'), ('+27', '+27'), ('+30', '+30'), ('+31', '+31'), ('+32', '+32'), ('+33', '+33'), ('+34', '+34'), ('+36', '+36'), ('+39', '+39'), ('+40', '+40'), ('+41', '+41'), ('+43', '+43'), ('+44', '+44'), ('+45', '+45'), ('+46', '+46'), ('+47', '+47'), ('+48', '+48'), ('+49', '+49'), ('+51', '+51'), ('+52', '+52'), ('+53', '+53'), ('+54', '+54'), ('+55', '+55'), ('+56', '+56'), ('+57', '+57'), ('+58', '+58'), ('+60', '+60'), ('+61', '+61'), ('+62', '+62'), ('+63', '+63'), ('+64', '+64'), ('+64', '+64'), ('+65', '+65'), ('+66', '+66'), ('+81', '+81'), ('+82', '+82'), ('+84', '+84'), ('+86', '+86'), ('+90', '+90'), ('+91', '+91'), ('+92', '+92'), ('+93', '+93'), ('+94', '+94'), ('+95', '+95'), ('+98', '+98'), ('+211', '+211'), ('+212', '+212'), ('+212', '+212'), ('+213', '+213'), ('+216', '+216'), ('+218', '+218'), ('+220', '+220'), ('+221', '+221'), ('+222', '+222'), ('+223', '+223'), ('+224', '+224'), ('+225', '+225'), ('+226', '+226'), ('+227', '+227'), ('+228', '+228'), ('+229', '+229'), ('+230', '+230'), ('+231', '+231'), ('+232', '+232'), ('+233', '+233'), ('+234', '+234'), ('+235', '+235'), ('+236', '+236'), ('+237', '+237'), ('+238', '+238'), ('+239', '+239'), ('+240', '+240'), ('+241', '+241'), ('+242', '+242'), ('+243', '+243'), ('+244', '+244'), ('+245', '+245'), ('+246', '+246'), ('+248', '+248'), ('+249', '+249'), ('+250', '+250'), ('+251', '+251'), ('+252', '+252'), ('+253', '+253'), ('+254', '+254'), ('+255', '+255'), ('+256', '+256'), ('+257', '+257'), ('+258', '+258'), ('+260', '+260'), ('+261', '+261'), ('+262', '+262'), ('+262', '+262'), ('+263', '+263'), ('+264', '+264'), ('+265', '+265'), ('+266', '+266'), ('+267', '+267'), ('+268', '+268'), ('+269', '+269'), ('+290', '+290'), ('+291', '+291'), ('+297', '+297'), ('+298', '+298'), ('+299', '+299'), ('+350', '+350'), ('+351', '+351'), ('+352', '+352'), ('+353', '+353'), ('+354', '+354'), ('+355', '+355'), ('+356', '+356'), ('+357', '+357'), ('+358', '+358'), ('+359', '+359'), ('+370', '+370'), ('+371', '+371'), ('+372', '+372'), ('+373', '+373'), ('+374', '+374'), ('+375', '+375'), ('+376', '+376'), ('+377', '+377'), ('+378', '+378'), ('+379', '+379'), ('+380', '+380'), ('+381', '+381'), ('+382', '+382'), ('+383', '+383'), ('+385', '+385'), ('+386', '+386'), ('+387', '+387'), ('+389', '+389'), ('+420', '+420'), ('+421', '+421'), ('+423', '+423'), ('+500', '+500'), ('+501', '+501'), ('+502', '+502'), ('+503', '+503'), ('+504', '+504'), ('+505', '+505'), ('+506', '+506'), ('+507', '+507'), ('+508', '+508'), ('+509', '+509'), ('+590', '+590'), ('+590', '+590'), ('+591', '+591'), ('+592', '+592'), ('+593', '+593'), ('+595', '+595'), ('+597', '+597'), ('+598', '+598'), ('+599', '+599'), ('+599', '+599'), ('+670', '+670'), ('+672', '+672'), ('+673', '+673'), ('+674', '+674'), ('+675', '+675'), ('+676', '+676'), ('+677', '+677'), ('+678', '+678'), ('+679', '+679'), ('+680', '+680'), ('+681', '+681'), ('+682', '+682'), ('+683', '+683'), ('+685', '+685'), ('+686', '+686'), ('+687', '+687'), ('+688', '+688'), ('+689', '+689'), ('+690', '+690'), ('+691', '+691'), ('+692', '+692'), ('+850', '+850'), ('+852', '+852'), ('+853', '+853'), ('+855', '+855'), ('+856', '+856'), ('+880', '+880'), ('+886', '+886'), ('+960', '+960'), ('+961', '+961'), ('+962', '+962'), ('+963', '+963'), ('+964', '+964'), ('+965', '+965'), ('+966', '+966'), ('+967', '+967'), ('+968', '+968'), ('+970', '+970'), ('+971', '+971'), ('+972', '+972'), ('+973', '+973'), ('+974', '+974'), ('+975', '+975'), ('+976', '+976'), ('+977', '+977'), ('+992', '+992'), ('+993', '+993'), ('+994', '+994'), ('+995', '+995'), ('+996', '+996'), ('+998', '+998'), ('+1242', '+1242'), ('+1246', '+1246'), ('+1264', '+1264'), ('+1268', '+1268'), ('+1284', '+1284'), ('+1340', '+1340'), ('+1345', '+1345'), ('+1441', '+1441'), ('+1473', '+1473'), ('+1649', '+1649'), ('+1664', '+1664'), ('+1670', '+1670'), ('+1671', '+1671'), ('+1684', '+1684'), ('+1721', '+1721'), ('+1758', '+1758'), ('+1767', '+1767'), ('+1784', '+1784'), ('+1868', '+1868'), ('+1869', '+1869'), ('+1876', '+1876'), ('+4779', '+4779'), ('+441481', '+441481'), ('+441534', '+441534'), ('+441624', '+441624')], default='', max_length=10)),
                ('phone_number', models.CharField(default='', max_length=10)),
                ('email', models.EmailField(max_length=254)),
                ('sex', models.CharField(choices=[('F', 'Female'), ('M', 'Male')], default='', max_length=1)),
                ('contract', models.CharField(choices=[('DD', 'Duree Determinee'), ('DI', 'Duree Indeterminee')], default='', max_length=2)),
                ('hired_date', models.DateField(blank=True, null=True)),
                ('is_employee', models.BooleanField(default=False, verbose_name='Is employee')),
                ('year_since_hired', models.PositiveIntegerField(null=True)),
                ('bio', models.TextField(max_length=1000)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Employee Profile',
                'verbose_name_plural': 'Employee Profiles',
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('slug', models.SlugField(max_length=200)),
                ('institution_name', models.CharField(max_length=100, verbose_name='school_name')),
                ('degree', models.CharField(choices=[('BS', 'Bachelors Science'), ('BA', 'Bachelors Arts'), ('MBA', 'Master Business Administration'), ('M', 'Masters'), ('HS', 'High School'), ('PhD', 'Doctorate')], default='', max_length=100)),
                ('specialization', models.CharField(max_length=255)),
                ('minor', models.CharField(max_length=255)),
                ('start_date', models.DateField(verbose_name='Enter Your Degree Starting Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Enter Your Degree Ending Date')),
                ('gpa', models.FloatField(verbose_name='Enter Your Grade Point Average')),
                ('graduated', models.BooleanField(default=False)),
                ('description', models.TextField(default='')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Education',
                'verbose_name_plural': 'Educations',
                'ordering': ('-start_date',),
            },
        ),
        migrations.CreateModel(
            name='Discussion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=200)),
                ('discussion_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('discuss', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('discussion_creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('forum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.forum')),
            ],
            options={
                'verbose_name': 'Discussion',
                'verbose_name_plural': 'Discussions',
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='DealImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(default='deals/deals.jpeg', upload_to='deals/', verbose_name='Supporting Documents')),
                ('deal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.deals')),
            ],
        ),
        migrations.AddField(
            model_name='blog',
            name='categories',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='core.category'),
        ),
        migrations.CreateModel(
            name='AdminProfile',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('slug', models.SlugField(unique=True)),
                ('first_name', models.CharField(default='', max_length=100)),
                ('last_name', models.CharField(default='', max_length=100)),
                ('DOB', models.DateField(blank=True, null=True)),
                ('prof_pic', models.ImageField(default='blog_pics/person_icon 1.png', upload_to='document/')),
                ('street_number', models.CharField(default='', max_length=5)),
                ('city', models.CharField(default='', max_length=66)),
                ('state', models.CharField(default='', max_length=2)),
                ('country', models.CharField(choices=[('GB', 'United Kingdom'), ('AF', 'Afghanistan'), ('AX', 'Aland Islands'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AS', 'American Samoa'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AQ', 'Antarctica'), ('AG', 'Antigua and Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BT', 'Bhutan'), ('BO', 'Bolivia'), ('BA', 'Bosnia and Herzegovina'), ('BW', 'Botswana'), ('BV', 'Bouvet Island'), ('BR', 'Brazil'), ('IO', 'British Indian Ocean Territory'), ('BN', 'Brunei Darussalam'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('CV', 'Cape Verde'), ('KY', 'Cayman Islands'), ('CF', 'Central African Republic'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CX', 'Christmas Island'), ('CC', 'Cocos (Keeling) Islands'), ('CO', 'Colombia'), ('KM', 'Comoros'), ('CG', 'Congo'), ('CD', 'Congo, The Democratic Republic of the'), ('CK', 'Cook Islands'), ('CR', 'Costa Rica'), ('CI', "Cote d'Ivoire"), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CY', 'Cyprus'), ('CZ', 'Czech Republic'), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DO', 'Dominican Republic'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('ET', 'Ethiopia'), ('FK', 'Falkland Islands (Malvinas)'), ('FO', 'Faroe Islands'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('GF', 'French Guiana'), ('PF', 'French Polynesia'), ('TF', 'French Southern Territories'), ('GA', 'Gabon'), ('GM', 'Gambia'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GR', 'Greece'), ('GL', 'Greenland'), ('GD', 'Grenada'), ('GP', 'Guadeloupe'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GG', 'Guernsey'), ('GN', 'Guinea'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('HM', 'Heard Island and McDonald Islands'), ('VA', 'Holy See (Vatican City State)'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Iran, Islamic Republic of'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IM', 'Isle of Man'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JE', 'Jersey'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KP', "Korea, Democratic People's Republic of"), ('KR', 'Korea, Republic of'), ('KW', 'Kuwait'), ('KG', 'Kyrgyzstan'), ('LA', "Lao People's Democratic Republic"), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libyan Arab Jamahiriya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MO', 'Macao'), ('MK', 'Macedonia, The Former Yugoslav Republic of'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('MH', 'Marshall Islands'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('YT', 'Mayotte'), ('MX', 'Mexico'), ('FM', 'Micronesia, Federated States of'), ('MD', 'Moldova'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('ME', 'Montenegro'), ('MS', 'Montserrat'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands'), ('AN', 'Netherlands Antilles'), ('NC', 'New Caledonia'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'Norfolk Island'), ('MP', 'Northern Mariana Islands'), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PS', 'Palestinian Territory, Occupied'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippines'), ('PN', 'Pitcairn'), ('PL', 'Poland'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('RE', 'Reunion'), ('RO', 'Romania'), ('RU', 'Russian Federation'), ('RW', 'Rwanda'), ('BL', 'Saint Barthelemy'), ('SH', 'Saint Helena'), ('KN', 'Saint Kitts and Nevis'), ('LC', 'Saint Lucia'), ('MF', 'Saint Martin'), ('PM', 'Saint Pierre and Miquelon'), ('VC', 'Saint Vincent and the Grenadines'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'Sao Tome and Principe'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('RS', 'Serbia'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('GS', 'South Georgia and the South Sandwich Islands'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SD', 'Sudan'), ('SR', 'Suriname'), ('SJ', 'Svalbard and Jan Mayen'), ('SZ', 'Swaziland'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syrian Arab Republic'), ('TW', 'Taiwan, Province of China'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania, United Republic of'), ('TH', 'Thailand'), ('TL', 'Timor-Leste'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Turkey'), ('TM', 'Turkmenistan'), ('TC', 'Turks and Caicos Islands'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates'), ('US', 'United States'), ('UM', 'United States Minor Outlying Islands'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VE', 'Venezuela'), ('VN', 'Viet Nam'), ('VG', 'Virgin Islands, British'), ('VI', 'Virgin Islands, U.S.'), ('WF', 'Wallis and Futuna'), ('EH', 'Western Sahara'), ('YE', 'Yemen'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')], default='', max_length=2)),
                ('phone_code', models.CharField(choices=[('+1', '+1'), ('+7', '+7'), ('+20', '+20'), ('+27', '+27'), ('+30', '+30'), ('+31', '+31'), ('+32', '+32'), ('+33', '+33'), ('+34', '+34'), ('+36', '+36'), ('+39', '+39'), ('+40', '+40'), ('+41', '+41'), ('+43', '+43'), ('+44', '+44'), ('+45', '+45'), ('+46', '+46'), ('+47', '+47'), ('+48', '+48'), ('+49', '+49'), ('+51', '+51'), ('+52', '+52'), ('+53', '+53'), ('+54', '+54'), ('+55', '+55'), ('+56', '+56'), ('+57', '+57'), ('+58', '+58'), ('+60', '+60'), ('+61', '+61'), ('+62', '+62'), ('+63', '+63'), ('+64', '+64'), ('+64', '+64'), ('+65', '+65'), ('+66', '+66'), ('+81', '+81'), ('+82', '+82'), ('+84', '+84'), ('+86', '+86'), ('+90', '+90'), ('+91', '+91'), ('+92', '+92'), ('+93', '+93'), ('+94', '+94'), ('+95', '+95'), ('+98', '+98'), ('+211', '+211'), ('+212', '+212'), ('+212', '+212'), ('+213', '+213'), ('+216', '+216'), ('+218', '+218'), ('+220', '+220'), ('+221', '+221'), ('+222', '+222'), ('+223', '+223'), ('+224', '+224'), ('+225', '+225'), ('+226', '+226'), ('+227', '+227'), ('+228', '+228'), ('+229', '+229'), ('+230', '+230'), ('+231', '+231'), ('+232', '+232'), ('+233', '+233'), ('+234', '+234'), ('+235', '+235'), ('+236', '+236'), ('+237', '+237'), ('+238', '+238'), ('+239', '+239'), ('+240', '+240'), ('+241', '+241'), ('+242', '+242'), ('+243', '+243'), ('+244', '+244'), ('+245', '+245'), ('+246', '+246'), ('+248', '+248'), ('+249', '+249'), ('+250', '+250'), ('+251', '+251'), ('+252', '+252'), ('+253', '+253'), ('+254', '+254'), ('+255', '+255'), ('+256', '+256'), ('+257', '+257'), ('+258', '+258'), ('+260', '+260'), ('+261', '+261'), ('+262', '+262'), ('+262', '+262'), ('+263', '+263'), ('+264', '+264'), ('+265', '+265'), ('+266', '+266'), ('+267', '+267'), ('+268', '+268'), ('+269', '+269'), ('+290', '+290'), ('+291', '+291'), ('+297', '+297'), ('+298', '+298'), ('+299', '+299'), ('+350', '+350'), ('+351', '+351'), ('+352', '+352'), ('+353', '+353'), ('+354', '+354'), ('+355', '+355'), ('+356', '+356'), ('+357', '+357'), ('+358', '+358'), ('+359', '+359'), ('+370', '+370'), ('+371', '+371'), ('+372', '+372'), ('+373', '+373'), ('+374', '+374'), ('+375', '+375'), ('+376', '+376'), ('+377', '+377'), ('+378', '+378'), ('+379', '+379'), ('+380', '+380'), ('+381', '+381'), ('+382', '+382'), ('+383', '+383'), ('+385', '+385'), ('+386', '+386'), ('+387', '+387'), ('+389', '+389'), ('+420', '+420'), ('+421', '+421'), ('+423', '+423'), ('+500', '+500'), ('+501', '+501'), ('+502', '+502'), ('+503', '+503'), ('+504', '+504'), ('+505', '+505'), ('+506', '+506'), ('+507', '+507'), ('+508', '+508'), ('+509', '+509'), ('+590', '+590'), ('+590', '+590'), ('+591', '+591'), ('+592', '+592'), ('+593', '+593'), ('+595', '+595'), ('+597', '+597'), ('+598', '+598'), ('+599', '+599'), ('+599', '+599'), ('+670', '+670'), ('+672', '+672'), ('+673', '+673'), ('+674', '+674'), ('+675', '+675'), ('+676', '+676'), ('+677', '+677'), ('+678', '+678'), ('+679', '+679'), ('+680', '+680'), ('+681', '+681'), ('+682', '+682'), ('+683', '+683'), ('+685', '+685'), ('+686', '+686'), ('+687', '+687'), ('+688', '+688'), ('+689', '+689'), ('+690', '+690'), ('+691', '+691'), ('+692', '+692'), ('+850', '+850'), ('+852', '+852'), ('+853', '+853'), ('+855', '+855'), ('+856', '+856'), ('+880', '+880'), ('+886', '+886'), ('+960', '+960'), ('+961', '+961'), ('+962', '+962'), ('+963', '+963'), ('+964', '+964'), ('+965', '+965'), ('+966', '+966'), ('+967', '+967'), ('+968', '+968'), ('+970', '+970'), ('+971', '+971'), ('+972', '+972'), ('+973', '+973'), ('+974', '+974'), ('+975', '+975'), ('+976', '+976'), ('+977', '+977'), ('+992', '+992'), ('+993', '+993'), ('+994', '+994'), ('+995', '+995'), ('+996', '+996'), ('+998', '+998'), ('+1242', '+1242'), ('+1246', '+1246'), ('+1264', '+1264'), ('+1268', '+1268'), ('+1284', '+1284'), ('+1340', '+1340'), ('+1345', '+1345'), ('+1441', '+1441'), ('+1473', '+1473'), ('+1649', '+1649'), ('+1664', '+1664'), ('+1670', '+1670'), ('+1671', '+1671'), ('+1684', '+1684'), ('+1721', '+1721'), ('+1758', '+1758'), ('+1767', '+1767'), ('+1784', '+1784'), ('+1868', '+1868'), ('+1869', '+1869'), ('+1876', '+1876'), ('+4779', '+4779'), ('+441481', '+441481'), ('+441534', '+441534'), ('+441624', '+441624')], default='', max_length=10)),
                ('phone_number', models.CharField(default='', max_length=10)),
                ('email', models.EmailField(max_length=254)),
                ('sex', models.CharField(choices=[('F', 'Female'), ('M', 'Male')], max_length=1)),
                ('is_consultant', models.BooleanField(default=True, verbose_name='Is Consultant')),
                ('bio', models.TextField(max_length=1000)),
                ('resume', models.FileField(default='', upload_to='Expert_resumes/')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Admin Profile',
                'verbose_name_plural': 'Admin Profiles',
            },
        ),
        migrations.CreateModel(
            name='ProductDealRead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('product_deal_read', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.productdeals')),
                ('reader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-timestamp',),
                'unique_together': {('reader', 'product_deal_read')},
            },
        ),
        migrations.CreateModel(
            name='JobRead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('job_read', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.jobs')),
                ('reader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-timestamp',),
                'unique_together': {('reader', 'job_read')},
            },
        ),
        migrations.CreateModel(
            name='FicheRead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('fiche_read', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.fichetechnic')),
                ('reader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('reader', 'fiche_read')},
            },
        ),
        migrations.CreateModel(
            name='DealRead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('deal_read', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.deals')),
                ('reader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-timestamp',),
                'unique_together': {('reader', 'deal_read')},
            },
        ),
        migrations.CreateModel(
            name='BlogRead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('blog_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.blog')),
                ('reader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-timestamp',),
                'unique_together': {('reader', 'blog_post')},
            },
        ),
    ]
